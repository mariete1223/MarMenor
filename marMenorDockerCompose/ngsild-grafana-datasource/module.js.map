{"version":3,"file":"module.js","mappings":"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","sources":["webpack:///../node_modules/lodash/isObject.js","webpack:///../node_modules/lodash/_baseGetTag.js","webpack:///../node_modules/lodash/_root.js","webpack:///../node_modules/lodash/isObjectLike.js","webpack:///../node_modules/lodash/identity.js","webpack:///../node_modules/lodash/isFunction.js","webpack:///../node_modules/lodash/_Symbol.js","webpack:///../node_modules/lodash/_freeGlobal.js","webpack:///../node_modules/lodash/eq.js","webpack:///../node_modules/lodash/isArrayLike.js","webpack:///../node_modules/lodash/isLength.js","webpack:///../node_modules/lodash/_isIndex.js","webpack:///../node_modules/lodash/isBuffer.js","webpack:///../node_modules/lodash/_nodeUtil.js","webpack:///../node_modules/lodash/defaults.js","webpack:///../node_modules/lodash/_baseRest.js","webpack:///../node_modules/lodash/_overRest.js","webpack:///../node_modules/lodash/_apply.js","webpack:///../node_modules/lodash/_setToString.js","webpack:///../node_modules/lodash/_baseSetToString.js","webpack:///../node_modules/lodash/constant.js","webpack:///../node_modules/lodash/_defineProperty.js","webpack:///../node_modules/lodash/_getNative.js","webpack:///../node_modules/lodash/_baseIsNative.js","webpack:///../node_modules/lodash/_getRawTag.js","webpack:///../node_modules/lodash/_objectToString.js","webpack:///../node_modules/lodash/_isMasked.js","webpack:///../node_modules/lodash/_coreJsData.js","webpack:///../node_modules/lodash/_toSource.js","webpack:///../node_modules/lodash/_getValue.js","webpack:///../node_modules/lodash/_shortOut.js","webpack:///../node_modules/lodash/_isIterateeCall.js","webpack:///../node_modules/lodash/keysIn.js","webpack:///../node_modules/lodash/_arrayLikeKeys.js","webpack:///../node_modules/lodash/_baseTimes.js","webpack:///../node_modules/lodash/isArguments.js","webpack:///../node_modules/lodash/_baseIsArguments.js","webpack:///../node_modules/lodash/isArray.js","webpack:///../node_modules/lodash/stubFalse.js","webpack:///../node_modules/lodash/isTypedArray.js","webpack:///../node_modules/lodash/_baseIsTypedArray.js","webpack:///../node_modules/lodash/_baseUnary.js","webpack:///../node_modules/lodash/_baseKeysIn.js","webpack:///../node_modules/lodash/_isPrototype.js","webpack:///../node_modules/lodash/_nativeKeysIn.js","webpack:///external amd \"react\"","webpack:///external amd \"@grafana/ui\"","webpack:///external amd \"@grafana/data\"","webpack:///external amd \"@grafana/runtime\"","webpack:///external amd \"lodash\"","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///./types.ts","webpack:///./utils.ts","webpack:///./units.ts","webpack:///./ngsildTypes.ts","webpack:///./GeoHandler.ts","webpack:///./NodeGraphHandler.ts","webpack:///./datasource.ts","webpack:///./ConfigEditor.tsx","webpack:///./components/GraphQueryEditor.tsx","webpack:///./AggregationHelper.ts","webpack:///./components/TimeseriesAggregationEditor.tsx","webpack:///./components/GeoParamsEditor.tsx","webpack:///./QueryEditor.tsx","webpack:///./module.ts"],"sourcesContent":["/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","var baseRest = require('./_baseRest'),\n    eq = require('./eq'),\n    isIterateeCall = require('./_isIterateeCall'),\n    keysIn = require('./keysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nmodule.exports = defaults;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__45__;","module.exports = __WEBPACK_EXTERNAL_MODULE__46__;","module.exports = __WEBPACK_EXTERNAL_MODULE__47__;","module.exports = __WEBPACK_EXTERNAL_MODULE__48__;","module.exports = __WEBPACK_EXTERNAL_MODULE__50__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","import { DataQuery, DataSourceJsonData } from '@grafana/data';\n// TODO cf https://github.com/easy-global-market/grafana-ngsild-plugin/blob/master/src/types.ts\n\nexport enum NgsildQueryType {\n  ENTITY = \"entity\",\n  MULTITEMPORAL = \"multitemporal\",\n  TEMPORAL = \"temporal\",\n  GEO = \"geo\",\n  TYPES = \"type\",\n  VERSION = \"version\",\n  ATTRIBUTES = \"attributes\",\n  NODE_GRAPH = \"nodegraph\"\n}\n\nexport const queryTypeForValue = (type?: string): NgsildQueryType|undefined => {\n  if (!type)\n    {return undefined;}\n  switch (type.toLowerCase()) {\n  case \"entity\":\n  case \"entities\":\n    return NgsildQueryType.ENTITY;\n  case \"multitemporal\":\n    return NgsildQueryType.MULTITEMPORAL;\n  case \"temporal\":\n  case \"timseries\":\n    return NgsildQueryType.TEMPORAL;\n  case \"geo\":\n    return NgsildQueryType.GEO;\n  case \"type\":\n  case \"types\":\n    return NgsildQueryType.TYPES;\n  case \"version\":\n    return NgsildQueryType.VERSION;\n  case \"attribute\":\n  case \"attributes\":\n    return NgsildQueryType.ATTRIBUTES;\n  case \"graph\":\n  case \"nodegraph\":\n  case \"node_graph\":\n    return NgsildQueryType.NODE_GRAPH;\n  default:\n    return undefined;\n  }\n}\n\nexport enum TimeseriesAggregationMethod {\n  TOTAL_COUNT = \"totalCount\",\n  DISTINCT_COUNT = \"distinctCount\",\n  // TODO what about distinctValue?\n  SUM = \"sum\",\n  AVERAGE = \"avg\",\n  MIN = \"min\",\n  MAX = \"max\",\n  STANDARD_DEVIATION = \"stddev\",\n  SUM_SQUARE = \"sumsq\"\n}\n\nexport const aggregationMethodForValue = (method?: string): TimeseriesAggregationMethod|undefined => {\n  if (!method)\n    {return undefined;}\n  switch (method.toLowerCase()) {\n  case \"totalcount\":\n  case \"total_count\":\n    return TimeseriesAggregationMethod.TOTAL_COUNT;\n  case \"distinctcount\":\n  case \"distinct_count\":\n    return TimeseriesAggregationMethod.DISTINCT_COUNT;\n  case \"sum\":\n    return TimeseriesAggregationMethod.SUM;\n  case \"avg\":\n  case \"average\":\n    return TimeseriesAggregationMethod.AVERAGE;\n  case \"min\":\n    return TimeseriesAggregationMethod.MIN;\n  case \"max\":\n    return TimeseriesAggregationMethod.MAX;\n  case \"stddev\":\n  case \"standard_deviation\":\n    return TimeseriesAggregationMethod.STANDARD_DEVIATION;\n  case \"sumsq\":\n  case \"sumsquare\":\n  case \"sum_square\":\n    return TimeseriesAggregationMethod.SUM_SQUARE;\n  default:\n    return undefined;\n  }\n\n}\n\nexport enum GeorelProperty {\n  NONE = \"none\",\n  NEAR = \"near\",\n  EQUALS = \"equals\",\n  DISJOINT = \"disjoint\",\n  INTERSECTS = \"intersects\",\n  WITHIN = \"within\",\n  CONTAINS = \"contains\",\n  OVERLAPS = \"overlaps\"\n}\n\nexport const georelFromValue = (georel?: string): GeorelProperty => {\n  if (!georel)\n    {return GeorelProperty.NONE;}\n  georel = georel.toLowerCase();\n  if (georel === \"near\" || georel.startsWith(\"near;\")) // in this case it should have further qualifiers\n    {return GeorelProperty.NEAR;} \n  switch (georel.toLowerCase()) {\n  case \"equals\":\n    return GeorelProperty.EQUALS;\n  case \"disjoint\":\n    return GeorelProperty.DISJOINT;\n  case \"intersects\":\n    return GeorelProperty.INTERSECTS;\n  case \"within\":\n    return GeorelProperty.WITHIN;\n  case \"contains\":\n    return GeorelProperty.CONTAINS;\n  case \"overlaps\":\n    return GeorelProperty.OVERLAPS;\n  default:\n    return GeorelProperty.NONE;\n  }\n}\n\n// TODO support Array<string> for each of the options?\nexport interface NgsildQuery extends DataQuery {\n  entityId?: string;\n  attributes?: string[];\n  entityType?: string; // note: multiple types are supported in most operations as a comma-separated string\n  entitiesIds?: string[];\n  variableValue?: String;\n  useLongEntityName?: boolean;\n  variableMultitemp?: string;\n  /**\n   * A query adhering to the NGSI-LD query language\n   */\n  customQuery?: string;\n\n  /**\n   * Filter for geometric properties.\n   * Geo relationship as per clause 4.10.\n   * Examples:\n   *  - near;maxDistance==2000 (in m; also minDistance)\n   *  - equals\n   *  - disjoint\n   *  - intersects\n   *  - within\n   *  - contains\n   *  - overlaps\n   */\n  georel?: string;\n  /**\n   * Filter for geometric properties.\n   * Geometry as per clause 4.10.\n   * Examples:\n   *   - Point, Polygon\n   */\n  geometry?: string;\n   /**\n    * Filter for geometric properties.\n    * Coordinates serialized as a string as per clause 4.10.\n    * Examples\n    *   - [8,40] (for Point)\n    *   - [[[100.0,0.0],[101.0,0.0],[101.0,1.0],[100.0,1.0],[100.0,0.0]]] (for Polygon)\n    */\n    coordinates?: string;\n  /**\n   * Filter for geometric properties. Default: \"location\". Typical examples:\n   *   - location\n   *   - observationSpace\n   *   - operationSpace\n   */\n  geoproperty?: string; \n\n  /**\n   * Only relevant for queryType TEMPORAL\n   * Supported values \"totalCount\", \"distinctCount\", \"sum\", \"avg\", \"min\", \"max\",\"stddev\", \"sumsq\".\n   * Note: this is not implemented in Mintaka: https://github.com/FIWARE/mintaka/issues/99 and not tested yet\n   */\n  aggrMethod?: string;\n  /**\n   * Only relevant for queryType TEMPORAL\n   * Note: this is not implemented in Mintaka: https://github.com/FIWARE/mintaka/issues/99  and not tested yet\n   */\n  aggrPeriodDuration?: string\n  /**\n   * Only relevant for queryType NODE_GRAPH.\n   * Attributes whose values are displayed within the nodes.\n   * \n   * Key \"\": default attributes\n   * Other keys: entity types\n   * Specific settings per type overwrite the default keys\n   */\n  primaryNodeAttributes?: Record<string, string[]>;\n  /**\n   * Only relevant for queryType NODE_GRAPH\n   * Attributes whose values are displayed within the nodes.\n   * \n   * Key \"\": default attributes\n   * Other keys: entity types\n   * Specific settings per type overwrite the default keys\n   */\n  secondaryNodeAttributes?: Record<string, string[]>;\n\n  /**\n   * Only relevant for queryType NODE_GRAPH\n   * Attribute used to derive the arc coloring.\n   * Must take values between 0 and 1. (TODO allow for value range config?)\n   */\n   arcColorNodeAttributes?: Record<string, string[]>;\n   arcColorComplementLabel?: string;\n  /**\n   * Only relevant for queryType NODE_GRAPH\n   */\n  primaryArcColor?: string;\n  /**\n   * Only relevant for queryType NODE_GRAPH\n   */\n  secondaryArcColor?: string;\n\n}\n\nexport const defaultQuery: Partial<NgsildQuery> = {\n  queryType: NgsildQueryType.TEMPORAL.valueOf()\n\n};\n\n/**\n * These are options configured for each DataSource instance\n */\nexport interface NgsildSourceOptions extends DataSourceJsonData {\n  contextUrl?: string;\n  timeseriesUrl?: string;\n  tokenUrl?: string;\n  //tokenAuth?: string; // will be set automatically to \"tokenAuth\" when auth is active => fed into plugin.json\n}\n\n/**\n * Value that is used in the backend, but never sent over HTTP to the frontend \n * TODO auth\n */\nexport interface NgsildSecureJsonData {\n  clientId?: string;\n  clientSecret?: string;\n}\n","export class JsUtils {\n\n    static concatPaths(p1: string, p2: string): string {\n        if (!p1)\n            {return p2;}\n        if (!p2)\n            {return p1;}\n        const end: boolean = p1.endsWith(\"/\");\n        const start: boolean = p2.startsWith(\"/\");\n        if (end && start)\n            {p2 = p2.substring(1);}\n        else if (!end && !start)\n            {p2 = \"/\" + p2;}\n        return p1 + p2;\n    }\n\n    static appendQueryParam(url: string, keyValue: string): string {\n        const sep: string = url.indexOf(\"?\") >= 0 ? \"&\" : \"?\";\n        return url + sep + keyValue;\n    }\n\n}\n","// TODO \nexport const units: Record<string, string> = {\n    // temperatures\n    CEL: \"°C\",\n    KEL: \"K\",\n    // distances\n    MTR: \"m\",\n    CMT: \"cm\",\n    DMT: \"dm\",\n    MMT: \"mm\",\n    KTM: \"km\",\n    KMT: \"km\",\n    C81: \"rad\",\n    DD: \"°\",\n    D61: \"'\",\n    D62: \"\\\"\",\n    // time\n    C47: \"ns\",\n    B98: \"µs\",\n    C26: \"ms\",\n    SEC: \"s\",\n    MIN: \"min\",\n    HUR: \"h\",\n    DAY: \"d\",\n    ANN: \"y\",\n    \n    // velocity\n    MTS: \"m/s\",\n    KMH: \"km/h\",\n    \"2X\": \"m/min\",\n    M62: \"km/s\",\n    MSK: \"m/s²\",\n    \"2A\": \"rad/s\", // angular velocity\n    M46: \"r/min\",\n\n    // weight\n    MGM: \"mg\",\n    GRM: \"g\",\n    KGM: \"kg\",\n    TNE: \"t\",\n    KTN: \"kt\",\n    // pressure\n    \"74\": \"mPa\",\n    PAL: \"Pa\",\n    KPA: \"kPa\",\n    HBA: \"hbar\",\n    MBR: \"mbar\",\n    BAR: \"bar\",\n    KBA: \"kbar\",\n    ATM: \"atm\",\n    // energy\n    JOU: \"J\",\n    KJO: \"kJ\",\n    \"3B\": \"MJ\",\n    GV: \"GJ\",\n    WHR: \"Wh\",\n    KWH: \"kWh\",\n    MWH: \"MWh\",\n    GWH: \"GWh\",\n    A53: \"eV\",\n    B29: \"keV\",\n    B71: \"MeV\",\n    A85: \"GeV\",\n    // power\n    C31: \"mW\",\n    WTT: \"W\",\n    KWT: \"kW\",\n    MAW: \"MW\",\n    A90: \"GW\",\n    D46: \"VA\",\n    KVA: \"kVA\",\n    MVA: \"MVA\",\n\n    // electricity\n    AMP: \"A\",\n    B22: \"kA\",\n    \"4K\": \"mA\",\n    COU: \"C\",\n    AMH: \"Ah\",\n    TAH: \"kAh\",\n    VLT: \"V\",\n    KVT: \"kV\",\n    \"2Z\": \"mV\",\n    D50: \"V/m\",\n    D33: \"T\",\n    C29: \"mT\",\n    OHM: \"Ω\",\n    E45: \"mΩ\",\n    B49: \"kΩ\",\n    B75: \"MΩ\",\n\n    // other \n    MTK: \"m²\",\n    MTQ: \"m³\",\n    LTR: \"l\",\n    MLT: \"ml\",\n    HTZ: \"Hz\",\n    NEW: \"N\",\n    C62: \"\", // \"one\", for relative density etc\n    KGS: \"kg/s\",\n    MQS: \"m³/s\",\n    MQH: \"m³/h\", \n    B11: \"J/(kg K)\", // heat capacity\n    B43: \"kJ/(kg K)\",\n    \"2N\": \"dB\",\n    BQL: \"Bq\"\n    \n};\n","import { units } from \"units\";\n\n/* [value, iso datetime] */\nexport type Measurement = [number, string];\n\nexport type EntityTemporal = Omit<{\n    [attribute: string]: {\n        type: \"Property\"|\"Relationship\"; // TODO other possible?\n        values: Measurement[];\n    };\n}, \"id\"|\"type\"|\"@context\">&{\n    id: string; // the entity id\n    type: string; // entity type\n    \"@context\": any;\n}\n\nexport interface EntityType {\n    typeName: string;\n    attributeNames: string[]; /* XXX cannot provide any static metadata here */\n    shortName?: string; \n}\n\nexport type Value<V> = V|{\"@value\": V};\n\n// the type is not exact, we would need an omit here around the first type, but this leads to an error \n// due to circular references; furthermore non-rectified properties look simpler than that. \n// This is rather a first order approximation.\nexport type Property<V=any> = {\n    [attribute: string]: Property|Relationship|Property[]|Relationship[];\n} & {\n    type: \"Property\";\n    value: Value<V>;\n    observedAt?: string;\n    unitCode?: string;\n    datasetId?: string;\n}\nexport type Relationship = {\n    [attribute: string]: Property|Relationship|Property[]|Relationship[];\n} & {\n    type: \"Relationship\";\n    object: string;\n    observedAt?: string;\n    datasetId?: string;\n}\n\nexport const getValue = <V>(property: Property<V>) => {\n    if (property === undefined || property === null)\n        {return undefined;}\n    if (typeof property !== \"object\")\n        {return property;}\n    if (property?.value === undefined)\n        {return undefined;}\n    if (typeof property.value === \"object\" && \"@value\" in property.value!)\n        {return property.value[\"@value\"];}\n    return property.value;\n}\n\nexport const getValueWithUnit = <V>(property: Property<V>) => {\n    let v: any = getValue(property);\n    if (isFinite(v) && typeof property === \"object\") {\n        let unit = property.unitCode;\n        if (unit) {\n            unit = units[unit] || unit;\n            v = v + (unit.startsWith(\"°\") ? \"\": \" \") + unit;\n        }\n    }\n    return v;\n}\n\n/* [longitude, latitude], in degrees */\nexport type GeoCoordinates = [number, number];\nexport type GeoPoint = {\n    type: \"Point\";\n    coordinates: GeoCoordinates;\n}\nexport type GeoLineString = {\n    type: \"LineString\";\n    coordinates: GeoCoordinates[];\n}\nexport type GeoPolygon = {\n    type: \"Polygon\";\n    coordinates: GeoCoordinates[][];\n}\n\nexport type GeoType = GeoPoint|GeoLineString|GeoPolygon; // TODO others?\nexport type GeoProperty = Omit<Property<GeoType>, \"type\">&{type: \"GeoProperty\"};\n\nexport type Attribute = Property|Relationship|GeoProperty;\n\nexport type Entity = Omit<{\n    [attribute: string]: Attribute|Attribute[];\n}, \"id\"|\"type\"|\"@context\">&{\n    id: string; // the entity id\n    type: string; // entity type\n    \"@context\": any;\n    location?: GeoProperty;\n    controlledProperty?: Property;\n}\n\nexport const INVALID_ATTRIBUTES: readonly string[] = Object.freeze([\"id\", \"type\", \"@context\"]);\n\n// TODO query language filters\n","import { MutableDataFrame } from \"@grafana/data\";\nimport { Entity, GeoProperty, GeoType, getValue, GeoCoordinates, Property, getValueWithUnit } from \"ngsildTypes\";\n\nexport class GeoHandler {\n\n    static handleGeoResult(entities: Entity[], refId: string): MutableDataFrame {\n        let allAttributes: string[] = entities\n          .map(result => Object.keys(result))\n          .flatMap(attributes => attributes)\n          // XXX\n          .filter(attribute => attribute !== \"@context\" && attribute !== \"location\" && attribute !== \"operationSpace\" && attribute !== \"observationSpace\");\n        allAttributes = [...new Set(allAttributes)]; // want unique attributes\n        const fields: Array<{name: string; values: any[]}>\n            = allAttributes.map(attr => {return {name: attr, values: [] } });\n        const longitude = {name: \"longitude\", values: [] as any[]};\n        const latitude = {name: \"latitude\", values: [] as any[]};\n        const names = {name: \"name\", values: [] as any[]};\n        entities.forEach((entity: Entity) => {\n          const location: GeoProperty = entity.location!;\n          const value: GeoType = location?.value as any as GeoType; // XXX imperfection of our typings...\n          if (value.type !== \"Point\") {\n            // TODO support more geo types\n            console.log(\"Skipping unsupported geo type\", value?.type, \"for entity\", entity);\n            return;\n          }\n          fields.forEach(field => {\n            const value = getValue/*WithUnit*/(entity[field.name] as any); // TODO unit would be preferable, but since we don't know which field may be used for marker sizing we cannot do it\n            field.values.push(value); \n          });\n          const coordinates: GeoCoordinates = value.coordinates;\n          console.log(coordinates)\n          longitude.values.push(coordinates[0]);\n          latitude.values.push(coordinates[1]);\n          let name: string = entity.id;\n          const col: number = name.lastIndexOf(\":\");\n            if (col >= 0 && col < name.length-1)\n              {name = name.substring(col + 1);} \n          names.values.push(name);\n        });\n        [latitude, longitude, names].forEach(f => fields.unshift(f));\n        return new MutableDataFrame({\n            refId: refId,\n            fields: fields\n          });\n      }\n\n}\n","import { FieldDTO, FieldType, MutableDataFrame, NodeGraphDataFrameFieldNames } from \"@grafana/data\";\nimport { NgsildDataSource } from \"datasource\";\nimport { Entity, getValue, getValueWithUnit, Property, Relationship } from \"ngsildTypes\";\nimport { NgsildQuery, NgsildQueryType } from \"types\";\nimport { units } from \"units\";\n\n/*\n  Graph panel documentation: https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/node-graph/\n    - \"Data source needs to return two data frames, one for nodes and one for edges. You have to set frame.meta.preferredVisualisationType = 'nodeGraph' \n       on both data frames or name them nodes and edges respectively for the node graph to render.\"\n*/\nexport class NodeGraphHandler {\n\n    constructor(\n        private readonly datasource: NgsildDataSource, \n        private readonly query: NgsildQuery) {}\n\n\n    // TODO move maxGraphDepth to NgsildQuery! \n    async handleGraphResult(entities: Entity[], maxGraphDepth: number): Promise<[MutableDataFrame, MutableDataFrame]> {\n        entities = await this.resolveMissingEntities(entities, maxGraphDepth);\n        const entityLabel = (entity: Entity) => {\n            let id: string = entity.id;\n            if (this.query.useLongEntityName)\n                {return id;}\n            const col: number = id.lastIndexOf(\":\");\n            return col > 0 && col<id.length-1 ? id.substring(col+1) : id;\n        };\n        const nodeIdField: FieldDTO = { name: \"id\", values: [], type: FieldType.string };\n        const nodeTitleField: FieldDTO = { name: \"title\", values: [], type: FieldType.string };\n        const nodeSubTitleField: FieldDTO = { name: \"suntitle\", values: [], type: FieldType.string };\n        const nodeMainStatField: FieldDTO = { name: \"mainStat\", values: [], type: FieldType.string, config: {/*displayName: \"Test\" , unit: \"test\", color: \"sdds\"*/} };  // TODO unit and color, etc\n        const nodeSecondaryStatField: FieldDTO = { name: \"secondaryStat\", values: [], type: FieldType.string, config: {} };\n        // TODO configurable color\n        const nodeArcField1: FieldDTO  = {name: \"arc__zone1\", values: [], type:FieldType.number, config: {color: {mode: \"fixed\", fixedColor: \"green\"} }};\n        const nodeArcField2: FieldDTO  = {name: \"arc__zone2\", values: [], type:FieldType.number, config: {color: {mode: \"fixed\", fixedColor: \"red\"} }};\n        const nodeArcFieldNeutral: FieldDTO  = {name: \"arc__neutral\", values: [], type:FieldType.number, config: {displayName: \"n.a.\" }};\n        const getStatValue = (entity: Entity, statAttributes?: Record<string, string[]>, options?: {returnAttribute?: boolean, skipUnit?: boolean}): any => {\n            if (!statAttributes)\n                {return undefined;}\n            const attributes: string[]|undefined = statAttributes[entity.type] || statAttributes[\"\"];\n            if (!attributes)\n                {return undefined;}\n            const selectedAttr: string|undefined = attributes.find(attr => attr in entity);\n            if (!selectedAttr)\n                {return undefined;}\n            if (options?.returnAttribute)\n                {return selectedAttr;}\n            let property = entity[selectedAttr];\n            if (Array.isArray(property) && property.length > 0)\n                {property = property[0];}\n            const value: any = options?.skipUnit ? getValue(property as Property<unknown>) : getValueWithUnit(property as Property<unknown>);\n            return /*value !== undefined ? selectedAttr + \": \" + value  : */value;\n        };\n        const setFieldConfig = (field: FieldDTO, statAttributes?: Record<string, string[]>) => {\n            if (!statAttributes)\n                {return;}\n            const entity = entities.find(e => getStatValue(e, statAttributes, {returnAttribute: true}));\n            if (entity) {\n                const attr = getStatValue(entity, statAttributes, {returnAttribute: true});\n                field.config!.displayName = attr;\n                 /*\n                const value0: Property<unknown>|Array<Property<unknown>> = entity[attr] as any;\n                const value: Property<unknown>|undefined = Array.isArray(value0) ? (value0.length > 0 ? value0[0] : undefined) : value0; \n                if (value?.unitCode) { // FIXME first convert it to a human-readable unit \n                    field.config!.unit = units[value.unitCode] || value.unitCode;\n                }\n                */\n            }\n        }\n        setFieldConfig(nodeMainStatField, this.query.primaryNodeAttributes); // TODO color?\n        setFieldConfig(nodeSecondaryStatField, this.query.secondaryNodeAttributes);\n        //setFieldConfig(nodeArcField1, this.query.arcColorNodeAttributes);\n        if (this.query.arcColorNodeAttributes) {\n            const entity = entities.find(e => getStatValue(e, this.query.arcColorNodeAttributes, {returnAttribute: true}));\n            if (entity) {\n                const attr = getStatValue(entity, this.query.arcColorNodeAttributes, {returnAttribute: true});\n                nodeArcField1.config!.displayName = attr;\n                nodeArcField2.config!.displayName = this.query.arcColorComplementLabel || (\"~\" + attr);\n                if (this.query.primaryArcColor)\n                    {nodeArcField1.config!.color!.fixedColor = this.query.primaryArcColor;}\n                if (this.query.secondaryArcColor)\n                    {nodeArcField2.config!.color!.fixedColor =  this.query.secondaryArcColor;}\n            }\n        }\n\n        entities.forEach(entity => {\n            const label: string = entityLabel(entity);\n            let type: string = entity.type;\n            const dot: number = type.lastIndexOf(\".\");\n            if (dot >= 0 && dot < type.length-1) {\n                type = type.substring(dot+1);\n            }\n            const subtitle = label.indexOf(type) >= 0 ? \"\" : type;\n            (nodeIdField.values as string[]).push(entity.id);\n            (nodeTitleField.values as string[]).push(label);\n            (nodeSubTitleField.values as string[]).push(subtitle);\n            (nodeMainStatField.values as any[]).push(getStatValue(entity, this.query?.primaryNodeAttributes));\n            (nodeSecondaryStatField.values as any[]).push(getStatValue(entity, this.query?.secondaryNodeAttributes));\n\n            const arcStatValue: number = getStatValue(entity, this.query?.arcColorNodeAttributes, {skipUnit: true});\n            const complementArcState = 1-arcStatValue;\n            const neutralArcState = isFinite(arcStatValue) ? 0 : 1;\n            (nodeArcField1.values as any[]).push(arcStatValue);\n            (nodeArcField2.values as any[]).push(complementArcState);\n            (nodeArcFieldNeutral.values as any[]).push(neutralArcState);\n        });\n        const edgeIdField: FieldDTO = { name: \"id\", values: [], type: FieldType.string };\n        const edgeSourceField: FieldDTO = { name: \"source\", values: [], type: FieldType.string };\n        const edgeTargetField: FieldDTO = { name: \"target\", values: [], type: FieldType.string };\n        const edgeMainStatField: FieldDTO = { name: \"mainStat\", values: []  }; // can be string or number\n        for (const entity of entities) {\n            const relationships: Array<[string, Relationship]> = Object.entries(entity)\n                .filter(([attribute, value]) => value?.type === \"Relationship\" && value?.object !== undefined && entities.find(entity2 => entity2.id === value.object) !== undefined);\n            relationships.forEach(([attr, relationship]) => {\n                (edgeIdField.values as string[]).push(entity.id + \"__\" + attr);\n                (edgeSourceField.values as string[]).push(entity.id);\n                (edgeTargetField.values as string[]).push(relationship.object);\n                (edgeMainStatField.values as string[]).push(attr);\n            });\n        }\n        const nodeFields = [nodeIdField, nodeTitleField, nodeSubTitleField];\n        if (this.query.primaryNodeAttributes)\n            {nodeFields.push(nodeMainStatField);}\n        if (this.query.secondaryNodeAttributes)\n            {nodeFields.push(nodeSecondaryStatField);}\n        if (this.query.arcColorNodeAttributes) {\n            nodeFields.push(nodeArcField1, nodeArcField2);\n            if ((nodeArcFieldNeutral.values as number[]).findIndex(n => n > 0) >= 0)\n                {nodeFields.push(nodeArcFieldNeutral);}\n        }\n        const nodes: MutableDataFrame = new MutableDataFrame({\n            refId: this.query.refId,\n            fields: nodeFields,   \n            meta: {preferredVisualisationType: \"nodeGraph\"},\n            name: \"nodes\"\n        });\n        const edges: MutableDataFrame = new MutableDataFrame({\n            refId: this.query.refId,\n            fields: [edgeIdField, edgeSourceField, edgeTargetField, edgeMainStatField],  \n            meta: {preferredVisualisationType: \"nodeGraph\"},\n            name: \"edges\"\n        });\n        return [nodes, edges];\n    }\n\n    private async resolveMissingEntities(entities: Entity[], depthCnt: number, startIdx = 0): Promise<Entity[]> {\n        if (depthCnt <= 0)\n            {return entities;}\n        const missingEntities: Set<string> = new Set();\n        for (let idx=startIdx; idx<entities.length; idx++) {\n            const entity = entities[idx];\n            const relationships: Array<[string, Relationship]> = Object.entries(entity)\n                .filter(([attribute, value]) => value?.type === \"Relationship\" && value?.object !== undefined);\n            const missing: string[] = relationships.map(([attr, target]) => target.object).filter(target => entities.find(entity2 => entity2.id === target) === undefined);\n            missing.forEach(id => missingEntities.add(id));\n        }\n        // request multiple entities in a single go\n        const newEntities: Entity[] = await this.getEntites(missingEntities);\n        if (newEntities.length === 0)\n            {return entities;}\n        const newStartIdx: number = entities.length;\n        entities.push(...newEntities);\n        const recursiveEntities: Entity[] = await this.resolveMissingEntities(entities, depthCnt--, newStartIdx);\n        return recursiveEntities;\n    }\n\n    private async getEntites(ids: Set<string>): Promise<Entity[]> {\n        if (ids.size === 0)\n            {return [];}\n        const entityId: string = [...ids].join(\",\");\n        let response: {data: Entity|Entity[], status: number } = await this.datasource.request({queryType: NgsildQueryType.ENTITY, entityId: entityId});\n        let additionalEntities: Entity|Entity[] = response.data\n        if (!additionalEntities)\n            {return [];}\n        if (!Array.isArray(additionalEntities))\n            {additionalEntities = [additionalEntities];}\n        return additionalEntities;\n    }\n\n}\n\n\n\n","import defaults from 'lodash/defaults';\n\nimport {\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  MutableDataFrame,\n  FieldType,\n} from '@grafana/data';\n\nimport { getBackendSrv, BackendSrv, FetchResponse, BackendSrvRequest, getTemplateSrv } from \"@grafana/runtime\";\n\nimport { NgsildQuery, NgsildSourceOptions, defaultQuery, NgsildQueryType } from './types';\nimport { JsUtils } from 'utils';\nimport { Measurement, EntityTemporal, INVALID_ATTRIBUTES, Entity, Attribute, getValue, Property } from 'ngsildTypes';\nimport { isNumber, lte } from 'lodash';\nimport { GeoHandler } from 'GeoHandler';\nimport { NodeGraphHandler } from 'NodeGraphHandler';\n\n\nexport class NgsildDataSource extends DataSourceApi<NgsildQuery, NgsildSourceOptions> {\n\n  private readonly baseUrl: string;  // http://broker:1026/ngsi-ld/v1\n  private readonly timeseriesUrl: string;  // http://broker-ts:8080\n  private readonly contextUrl: string; // http://context/ngsi-context.jsonld\n  private readonly contextLinkHeader: string; // <http://context/ngsi-context.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\n\n  constructor(instanceSettings: DataSourceInstanceSettings<NgsildSourceOptions>) {\n    super(instanceSettings);\n    let baseUrl = instanceSettings.url || \"\";\n    if (baseUrl.indexOf(\"/ngsi-ld/v1\") < 0)\n      {baseUrl = JsUtils.concatPaths(baseUrl, \"/ngsi-ld/v1\");}\n    this.baseUrl = baseUrl;\n    const actualTimeseriesUrl: string = instanceSettings.jsonData?.timeseriesUrl || \"\";\n    // note: the route alias \"temporal\" for instanceSettings.jsonData.timeseriesUrl in the backend proxy \n    // is defined in plugin.json, see https://community.grafana.com/t/grafana-datasource-backend-proxy/6861/4\n    // it is a bit strange though that we need to prepend the broker url for this\n    const timeseriesUrl: string = instanceSettings.access === \"proxy\" ? \n      JsUtils.concatPaths(instanceSettings.url?.replace(\"/ngsi-ld/v1\", \"\")||\"\", \"temporal\") : actualTimeseriesUrl; \n    this.timeseriesUrl = timeseriesUrl;\n    this.contextUrl = instanceSettings.jsonData?.contextUrl || \"\";\n    this.contextLinkHeader = !this.contextUrl ? \"\" :\n      \"<\" + this.contextUrl + \">; rel=\\\"http://www.w3.org/ns/json-ld#context\\\"; type=\\\"application/ld+json\\\"\";\n  }\n\n  async query(options: DataQueryRequest<NgsildQuery>): Promise<DataQueryResponse> {\n    const backend: BackendSrv = getBackendSrv();\n    const {range} = options; \n    const data0: Array<Promise<MutableDataFrame[]>> = options.targets!.map((target: NgsildQuery) => this.querySingle(defaults(target, defaultQuery), \n        {backend: backend, from: range?.from?.valueOf(), to: range?.to?.valueOf()}));\n    const frames: MutableDataFrame[] = (await Promise.all(data0))\n      .filter(f => f?.length > 0)\n      .flatMap(f => f);\n    return { data: frames };\n  }\n\n  async metricFindQuery(query: string, options?: any) {\n    // Retrieve DataQueryResponse based on query.\n    \n\n    let posicion = query.indexOf(\"|\");\n    let prop = \"id\";\n\n    // Verificar si la letra fue encontrada y obtener su posición\n    if (posicion !== -1) {\n      // Dividir la cadena en base al delimitador\n      let queryArray = query.split(\"|\");\n      query = queryArray[0];\n      prop = queryArray[1];\n    }\n\n    let response: { data: EntityTemporal|EntityTemporal[]|Entity|Entity[], status: number } = await this.requestSimple(query, options);\n    let results: EntityTemporal|EntityTemporal[]|Entity|Entity[] = response.data;\n\n    let getStringValue = (frame: Entity, property: string) => {\n      if (typeof(frame[property]) !== \"string\")\n        {return getValue(frame[property] as Property);}\n      else\n       {return frame[property];}\n    }\n\n    return Array.isArray(results)\n        ? results.map(frame => ({ text: getStringValue(frame as Entity, prop) }))\n        : [{ text: (results as EntityTemporal | Entity)[prop].toString()}];\n  }\n\n  private addDataToFrame(frames: MutableDataFrame[], results: EntityTemporal|EntityTemporal[]|Entity|Entity[], query: NgsildQuery, extraInfo: string, replaceName: string, options?: {from?: number, to?: number}) {\n    for (const result of results as any) {\n      let name: string = result.id;\n      if (!query.useLongEntityName) {\n        const col: number = name.lastIndexOf(\":\");\n        if (col >= 0 && col < name.length-1)\n          {name = name.substring(col + 1);} // avoid lengthy expanded names // TODO configurable\n      }\n      const attributes: string[] = Object.keys(result);\n      INVALID_ATTRIBUTES.forEach(key => {\n        const idx: number = attributes.indexOf(key);\n        if (idx >= 0)\n          {attributes.splice(idx, 1);}\n      });\n      for (const attribute of attributes) {\n        if (result[attribute].type === \"Relationship\")\n          {continue;}\n        if (result[attribute].values) {\n          const data: Measurement[] = result[attribute].values;\n          let attributeChanged = replaceName\n          if (attributeChanged === \"\"){\n            attributeChanged = attribute\n          }\n          if (extraInfo !== \"\"){\n            attributeChanged = attributeChanged+\":\"+extraInfo\n          }\n          const field = { \n            name:  name + \":\" + attributeChanged, \n            values: data.map(point => point[0]), \n            type: FieldType.number \n          };\n          const time = { \n            name: \"Time\", \n            values: data.map(point => new Date(point[1]).getTime()), // in case of aggregated values there is another entry, period end time interval point[2]\n            type: FieldType.time \n          };\n          frames.push(new MutableDataFrame({\n            refId: query.refId,\n            fields: [time, field]\n          }));\n        } else if (result[attribute].value !== undefined) {\n          let value: any = result[attribute].value;\n          if (typeof value === \"object\" && \"@value\" in value)\n            {value = value[\"@value\"];}\n          const type: FieldType = isNumber(value) ? FieldType.number : typeof value === \"string\" ? FieldType.string:\n              value === false || value === true ? FieldType.boolean : FieldType.other; \n          const field = { \n            name:  name + \":\" + attribute, \n            values: [value], \n            type: FieldType.number \n          };\n          const t: number = isFinite(result[attribute].observedAt) ? result[attribute].observedAt : \n            isFinite(options?.from!) && isFinite(options?.to!) ? (options?.from! + options?.to!)/2 :\n            isFinite(options?.from!) ? options?.from : isFinite(options?.to!) ? options!.to : Date.now();\n          const time = { \n            name: \"Time\", \n            values: [t], \n            type: FieldType.time \n          };\n          frames.push(new MutableDataFrame({\n            refId: query.refId,\n            fields: [time,field]\n          }));\n        }\n      }\n    }\n  }\n\n\n  // it is somewhat ugly that we need to create multiple data fromes from a single request,\n  // but different attributes may not be time-aligned, so there is little we can do\n  private async querySingle(query: NgsildQuery, options?: {backend?: BackendSrv, from?: number, to?: number;}): Promise<MutableDataFrame[]> {\n    if (!query.entityType&&!query.entityId&&!(query.attributes?.length! > 0))\n      {return [];}\n    \n    const frames: MutableDataFrame[] = [];\n    let results: EntityTemporal|EntityTemporal[]|Entity|Entity[] = [];\n\n    if(query.queryType === NgsildQueryType.MULTITEMPORAL){\n      let entities_to_fetch = query.entitiesIds;\n      if (entities_to_fetch && entities_to_fetch.length > 0){\n      }else{\n        let variableName = \"$DeviceMeasurement\"\n        if (query.variableMultitemp && query.variableMultitemp !== \"\")\n          {\n            variableName = query.variableMultitemp;\n          }\n        entities_to_fetch = getTemplateSrv().replace(variableName, undefined, \"csv\").split(\",\");\n      }\n      let temp_results = []\n      let temp_controlled: string[] = []\n      let temp_extra_att: string[] = []\n\n      for( let entity of entities_to_fetch){\n        let response: { data: EntityTemporal|EntityTemporal[]|Entity|Entity[], status: number } = await this.request({queryType: NgsildQueryType.ENTITY, attributes: [\"controlledProperty\",\"depth\", \"target\"], entityId: entity},options)\n        let resControlled: Entity = response.data as Entity\n        temp_controlled.push(getValue(resControlled[\"controlledProperty\"] as Property))\n        let depth = getValue(resControlled[\"depth\"] as Property)\n        let target = getValue(resControlled[\"target\"] as Property)\n        if (depth !== undefined){\n          temp_extra_att.push(\"depth_\"+depth.toString())\n        }\n        if (target !== undefined){\n          temp_extra_att.push(\"place_\"+target)\n        }\n        if (depth === undefined && target === undefined){\n          temp_extra_att.push(\"\")\n        }\n        let response2: { data: EntityTemporal|EntityTemporal[]|Entity|Entity[], status: number, headers: any } = await this.request({queryType: NgsildQueryType.TEMPORAL, entityId: entity},options)\n        let res = response2.data\n\n        while (response2.status === 206){\n\n          let content_range = response2.headers.get(\"Content-Range\").split(\" \")[1];\n          content_range = content_range.split(\"/\")[0];\n          content_range = content_range.split(\"-\");\n          content_range = content_range.slice(3).join(\"-\")+\"Z\";\n\n          const fecha = new Date(content_range);\n\n          // Obtener el número de milisegundos desde el 1 de enero de 1970\n          const numeroDeMilisegundos = fecha.getTime();\n          \n          if(options === undefined){\n            options = {from: numeroDeMilisegundos}\n          }\n          else{\n            options.from = numeroDeMilisegundos\n          }\n          \n          response2 = await this.request({queryType: NgsildQueryType.TEMPORAL, entityId: entity},options)\n          let res2 = response2.data\n          temp_results.push(res2)\n        }\n        temp_results.push(res)\n      } \n\n      let i = 0;\n      for (const result of temp_results as any) {\n        if (!Array.isArray(result))\n        {results = [result] as any;}\n        this.addDataToFrame(frames, results, query,temp_extra_att[i] ,temp_controlled[i], options);\n        i++;\n      }\n    \n    }\n\n    if ( query.queryType !== NgsildQueryType.MULTITEMPORAL){\n      let response: { data: EntityTemporal|EntityTemporal[]|Entity|Entity[], status: number } = await this.request(query, options);\n      results = response.data\n      if (!Array.isArray(results))\n      {results = [results] as any;}\n      this.addDataToFrame(frames, results, query,\"\", \"\", options);\n    }\n\n    if (query.queryType === NgsildQueryType.GEO)\n      {return [GeoHandler.handleGeoResult(results as Entity[], query.refId)];}\n      \n    if (query.queryType === NgsildQueryType.NODE_GRAPH)\n      {return new NodeGraphHandler(this, query).handleGraphResult(results as Entity[], 4);} // TODO max depth\n\n    return frames;\n  }\n\n  async request<T=any>(\n      query: Omit<NgsildQuery, \"refId\">, \n      options?: { \n        backend?: BackendSrv, \n        from?: number, \n        to?: number; \n        limit?: number;\n        offset?: number;\n        lastN?: number;\n      }): Promise<{ data: T, status: number, headers: any }> {\n    const backend: BackendSrv = options?.backend || getBackendSrv();\n    let endpoint: string;\n    const ngsildOptionsParam: string[] = [];\n    switch (query.queryType) {\n    case NgsildQueryType.TEMPORAL:\n      endpoint = \"/temporal/entities\";\n      console.log(\"primero \"+endpoint)\n      if (query.entityId)\n        {endpoint += \"/\" + query.entityId;}\n      ngsildOptionsParam.push(\"temporalValues\"); // make sure to query the simplified temporal representation\n      console.log(\"primero \"+endpoint)\n      if (query.aggrMethod) {\n        ngsildOptionsParam.push(\"aggregatedValues\"); // \n        endpoint = JsUtils.appendQueryParam(endpoint, \"aggrMethod=\" + query.aggrMethod);\n        if (query.aggrPeriodDuration)\n          {endpoint = JsUtils.appendQueryParam(endpoint, \"aggrPeriodDuration=\" + query.aggrPeriodDuration);}\n      }\n      break;\n    case NgsildQueryType.VERSION:\n      endpoint = \"/version\";\n      break;\n    case NgsildQueryType.TYPES:\n      endpoint = \"/types?details=true\";\n      break;\n    case NgsildQueryType.ATTRIBUTES:\n      if (!query.entityId) {\n        endpoint = \"/attributes\";\n        break;\n      }\n      // fallthrough\n    case NgsildQueryType.GEO:\n    case NgsildQueryType.NODE_GRAPH:\n    case NgsildQueryType.ENTITY:\n      endpoint = \"/entities\";\n      if (query.entityId) {\n        const hasComma: boolean = query.entityId.indexOf(\",\")>=0;\n        if (hasComma)\n          {endpoint += \"?id=\" + query.entityId.split(\",\").map(id=>id.trim()).filter(id=>id).map(encodeURIComponent).join(\",\");}\n        else\n          {endpoint += \"/\" + getTemplateSrv().replace(query.entityId);} // note: encoding does not work with the backend proxy\n      }\n      if (query.queryType === NgsildQueryType.GEO) {\n        if (query.attributes?.length!>0) {\n          if (query.attributes!.indexOf(\"location\") < 0)\n            {query.attributes!.push(\"location\");}\n        } else {\n          endpoint = JsUtils.appendQueryParam(endpoint, \"q=location\");\n        }\n      }\n      else if (query.queryType === NgsildQueryType.NODE_GRAPH) {\n        let attributes: string[] = query.attributes || [];\n        const addAttributes = (statAttributes?: Record<string, string[]>) => {\n          if (!statAttributes)\n            {return;}\n          attributes.push(...new Set(Object.values(statAttributes).flatMap(arr => arr)));\n        }\n        addAttributes(query.primaryNodeAttributes);\n        addAttributes(query.secondaryNodeAttributes);\n        addAttributes(query.arcColorNodeAttributes);\n        attributes = [...new Set(attributes)]; // keep only unique values\n        if (attributes.length > 0)\n          {query.attributes = attributes;}\n      }\n      break;\n    default:\n      throw new Error(\"Invalid query type \" + query.queryType);\n    }\n    if (query.entityType)\n      {endpoint = JsUtils.appendQueryParam(endpoint, \"type=\" + encodeURIComponent(query.entityType));}\n    if (query.attributes?.length!>0)\n      {endpoint = JsUtils.appendQueryParam(endpoint, \"attrs=\" + query.attributes?.map(encodeURIComponent).join(\",\"));}\n    if (query.queryType === NgsildQueryType.TEMPORAL)\n      {endpoint = NgsildDataSource.setTimeInterval(endpoint, options?.from, options?.to);}\n    if (query.georel) {\n      endpoint = JsUtils.appendQueryParam(endpoint, \"georel=\" + encodeURIComponent(query.georel));\n      if (query.geometry)\n        {endpoint = JsUtils.appendQueryParam(endpoint, \"geometry=\" + encodeURIComponent(query.geometry));}\n      if (query.coordinates)\n        {endpoint = JsUtils.appendQueryParam(endpoint, \"coordinates=\" + encodeURIComponent(query.coordinates));}\n      if (query.geoproperty)\n        {endpoint = JsUtils.appendQueryParam(endpoint, \"geoproperty=\" + encodeURIComponent(query.geoproperty));}\n    }\n    if (query.customQuery){\n        if (query.variableValue && query.variableValue !== \"\"){\n          query.customQuery = query.customQuery+\"%3BrefDevice==%22\"+query.variableValue+\"%22\";\n        }\n        endpoint = JsUtils.appendQueryParam(endpoint, \"q=\" + getTemplateSrv().replace(query.customQuery)); \n    }\n    else {\n      if (query.variableValue && query.variableValue !== \"\"){\n        endpoint = JsUtils.appendQueryParam(endpoint, \"q=refDevice==%22\"+query.variableValue+\"%22\"); \n      }\n    }\n\n    const appendNumericParam = (url: string, key: string, value?: number): string => \n        isFinite(value!) ? JsUtils.appendQueryParam(url, encodeURIComponent(key) + \"=\" + encodeURIComponent(value as any)) : url;\n    const appendAll = (url: string, params: Record<string, number|undefined>, keys: string[]): string => {\n      for (const key of keys) {\n        url = appendNumericParam(url, key, params[key]);\n      }\n      return url;\n    }\n    if (options)\n      {endpoint = appendAll(endpoint, options as any, [\"limit\", \"offset\", \"lastN\"]);}\n    if (ngsildOptionsParam.length > 0)\n      {endpoint = JsUtils.appendQueryParam(endpoint, \"options=\" + ngsildOptionsParam.join(\",\"))}\n    const baseUrl = query.queryType === NgsildQueryType.VERSION ? this.baseUrl.replace(\"/ngsi-ld/v1\", \"\") : \n      query.queryType === NgsildQueryType.TEMPORAL ? this.timeseriesUrl :  this.baseUrl;\n    const url: string = JsUtils.concatPaths(baseUrl, endpoint);\n    console.log(\"url\")\n    console.log(url)\n    const fetchOptions: BackendSrvRequest = {\n      method: \"GET\",\n      url: url,\n      responseType: \"json\",\n      headers: {Accept: \"application/json\"}\n    };\n    if (this.contextUrl && query.queryType !== NgsildQueryType.VERSION) {\n      fetchOptions.headers = {\n        Link: this.contextLinkHeader,\n        Accept: \"application/ld+json\"\n      };\n    }\n\n    const result0: { data: T, status: number, headers: any } = await NgsildDataSource.toPromise(backend.fetch(fetchOptions));\n    return result0;\n  }\n\n  async requestSimple<T=any>(\n    query: string, \n    options?: { \n      backend?: BackendSrv, \n      from?: number, \n      to?: number; \n      limit?: number;\n      offset?: number;\n      lastN?: number;\n    }): Promise<{ data: T, status: number, headers: any }> {\n  const backend: BackendSrv = options?.backend || getBackendSrv();\n  let urlComposed  = getTemplateSrv().replace(query,undefined,\"csv\");\n  let paramsString = urlComposed.split(\"?\")[1];\n  let params = paramsString.split(\"&\").filter((param) => param.startsWith(\"q=\"));\n  let paramsToKeep = paramsString.split(\"&\").filter((param) => !param.startsWith(\"q=\")).join(\"&\");\n  let newParams = \"q=\";\n  let urlmodified = urlComposed;\n  if (params.length === 1) {\n    let paramsQuery = params[0].substring(2).split(\"%3B\");\n    \n    paramsQuery.forEach((param) => {\n      if (param.startsWith(\"controlledProperty==\")){\n        newParams+= \"controlledProperty==\"\n        let values = param.split('%22')[1].split(',');\n        values.forEach((value) => {\n          newParams += \"%22\"+value+\"%22,\";\n        })\n        newParams = newParams.substring(0, newParams.length-1);\n        newParams+=\"%3B\";\n      }else{\n        newParams+=param+\"%3B\";\n      }\n    });\n    newParams = newParams.substring(0, newParams.length-3);\n    urlmodified = urlComposed.split(\"?\")[0]+\"?\"+paramsToKeep+\"&\"+newParams;\n  }\n\n  const fetchOptions: BackendSrvRequest = {\n    method: \"GET\",\n    url: urlmodified,\n    responseType: \"json\",\n    headers: {Accept: \"application/json\"}\n  };\n  if (this.contextUrl) {\n    fetchOptions.headers = {\n      Link: this.contextLinkHeader,\n      Accept: \"application/ld+json\"\n    };\n  }\n\n  const result0: { data: T, status: number, headers: any } = await NgsildDataSource.toPromise(backend.fetch(fetchOptions));\n  return result0;\n}\n\n  private static setTimeInterval(url: string, from?: number, to?: number): string {\n    // @ts-ignore\n    const hasFrom: boolean = isFinite(from);\n    // @ts-ignore\n    const hasTo: boolean = isFinite(to);\n    if (hasFrom||hasTo) {\n      const timerel = (hasFrom&&hasTo) ? \"between\" : hasFrom ? \"after\" : \"before\";\n      url = JsUtils.appendQueryParam(url, \"timerel=\" + timerel);\n      const timeAt: number = hasFrom ? from! : to!;\n      url = JsUtils.appendQueryParam(url, \"timeAt=\" + new Date(timeAt).toISOString());\n      if (hasFrom&&hasTo)\n        {url = JsUtils.appendQueryParam(url, \"endTimeAt=\" + new Date(to!).toISOString());}\n    }\n    return url;\n  }\n\n  async testDatasource() {\n    return this.request({queryType: NgsildQueryType.VERSION});\n  }\n\n  // TODO would like to use lastValueFrom here, but import is unclear\n  private static toPromise<T>(observable: any /* Observable<FetchResponse<T>> */): Promise<{ data: T, status: number, headers: any }> {\n    return new Promise((resolve, reject) => {\n      observable.subscribe({\n        next: (response: FetchResponse<T>) => {\n          if (!response.ok) {\n            let message: string = response.status + \": \" + response.statusText;\n            if (response.data)\n              {message += \" (\" + response.data + \")\";}\n            reject(\"Failed to contact data source \" + message);\n          }\n          resolve({data: response.data, status: response.status, headers: response.headers});\n        },\n        error: (e: any) => reject(e)\n      })\n    });\n  }\n\n\n}\n","import React, { ChangeEvent, PureComponent } from 'react';\nimport { InlineFormLabel, LegacyForms, Label, Select, Checkbox, Input } from '@grafana/ui';\nimport { DataSourcePluginOptionsEditorProps, SelectableValue } from '@grafana/data';\nimport { NgsildSourceOptions, NgsildSecureJsonData } from './types';\n\nconst { SecretFormField, FormField } = LegacyForms;\n\ninterface Props extends DataSourcePluginOptionsEditorProps<NgsildSourceOptions, NgsildSecureJsonData> {}\n\ninterface State {}\n\nexport class ConfigEditor extends PureComponent<Props, State> {\n\n  onUrlChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { options, onOptionsChange } = this.props;\n    onOptionsChange({ ...options, url: event.currentTarget.value?.trim() });\n  };\n\n  onContextUrlChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = options.jsonData;\n    const options2 = {...options, jsonData: {...jsonData, contextUrl: event.currentTarget.value?.trim() ||\"\"}};\n    onOptionsChange(options2);\n  };\n\n  onTimeseriesUrlChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = options.jsonData;\n    const options2 = {...options, jsonData: {...jsonData, timeseriesUrl:event.currentTarget.value?.trim() ||\"\"}};\n    onOptionsChange(options2);\n  };\n\n  onAccessModeChange = (value: SelectableValue<string>) => {\n    const { options, onOptionsChange } = this.props;\n    onOptionsChange({ ...options, access: value.value || \"proxy\" });\n  };\n\n  onAuthStatusChange = (active: boolean) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = { ...options.jsonData, authType: active ? \"oauth\" : undefined};\n    onOptionsChange({ ...options, jsonData: jsonData });\n  };\n\n  onClientIdChange = (value: string) => {\n    // removing the client id does not make sense, if this is desired then the authentication should rather be disabled\n    // otherwise any config change would remove the configured id\n    if (!value) \n      {return;}\n    const { options, onOptionsChange } = this.props;\n    const securejsonData = { ...(options.secureJsonData || {}), clientId: value };\n    onOptionsChange({ ...options, secureJsonData: securejsonData });\n  }\n\n  onClientSecretChange = (value: string) => {\n    // removing the client secret does not make sense, if this is desired then the authentication should rather be disabled\n    // otherwise any config change would remove the configured secret\n    if (!value) \n      {return;}\n    const { options, onOptionsChange } = this.props;\n    const securejsonData = { ...(options.secureJsonData || {}), clientSecret: value };\n    onOptionsChange({ ...options, secureJsonData: securejsonData });\n  }\n\n  onTokenServerChange = (value: string) => {\n    const { options, onOptionsChange } = this.props;\n    const jsonData = { ...options.jsonData, tokenUrl: value };\n    onOptionsChange({ ...options, jsonData: jsonData });\n  }\n\n  render() {\n    const { options } = this.props;\n    const { jsonData, secureJsonFields, secureJsonData } = options;\n    const isAuthActive: boolean = jsonData.authType === \"oauth\" /*&& jsonData.tokenAuth === \"tokenAuth\"; */// TODO validate authType?\n    const authConfigured: boolean = isAuthActive && secureJsonFields.clientId && secureJsonFields.clientSecret;\n    return (\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form\">\n          <FormField\n            label=\"Context broker URL\"\n            labelWidth={10}\n            inputWidth={20}\n            onChange={this.onUrlChange}\n            value={options.url || ''}\n            placeholder=\"http://localhost:1026\"\n          />\n        </div>\n        <div className=\"gf-form\">\n          <FormField\n            label=\"Temporal broker URL\"\n            labelWidth={10}\n            inputWidth={20}\n            onChange={this.onTimeseriesUrlChange}\n            value={jsonData.timeseriesUrl || ''}\n            placeholder=\"http://localhost:1026\"\n          />\n        </div>\n        <div className=\"gf-form\">\n          <FormField\n            label=\"Context URL\"\n            labelWidth={10}\n            inputWidth={20}\n            onChange={this.onContextUrlChange}\n            value={jsonData.contextUrl || ''}\n            placeholder=\"http://localhost:80/ngsi-context.jsonld\"\n          />\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel width={10} tooltip=\"Select the access mode for the plugin.\">\n              Access\n            </InlineFormLabel>\n            <Select\n              options={[{value: \"direct\", title: \"Send broker requests from the browser\", label: \"direct\"}, {value: \"proxy\", title: \"Send broker requests via the backend\", label: \"proxy\"}]}\n              value={options.access || \"direct\"}\n              onChange={this.onAccessModeChange}\n              width={20}\n              />\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <Checkbox\n              checked={isAuthActive}\n              onChange={c => this.onAuthStatusChange(c.currentTarget.checked)}\n              label=\"Authentication active?\"\n              title=\"If checked, OAuth 2.0 authentication will be enabled for the datasource. Use with a context broker secured by means of OAuth.\"\n            ></Checkbox>\n          </div>\n        </div>\n        {isAuthActive &&\n          <React.Fragment>\n            <div className=\"gf-form-inline\">\n              <div className=\"gf-form\">\n                <InlineFormLabel width={10} tooltip=\"OAuth token server\">\n                  OAuth token URL\n                </InlineFormLabel>\n                <Input\n                  value={jsonData.tokenUrl || \"\"}\n                  placeholder={\"https://my.auth.server.com/v1/oauth/token\"}\n                  onChange={evt => this.onTokenServerChange(evt.currentTarget.value?.trim())}\n                  title=\"OAuth token server.\"\n                ></Input>\n              </div>\n            </div>\n            <div className=\"gf-form-inline\">\n              <div className=\"gf-form\">\n                <InlineFormLabel width={10} tooltip=\"OAuth client id. This must be configured in the authentication server, too.\">\n                  Client id\n                </InlineFormLabel>\n                <Input\n                  value={secureJsonData?.clientId || \"\"}\n                  placeholder={authConfigured ? \"Value configured\" : \"No client id configured yet\"}\n                  onChange={evt => this.onClientIdChange(evt.currentTarget.value?.trim())}\n                  title=\"OAuth client id. This must be configured in the authentication server.\"\n                  type=\"password\"\n                ></Input>\n              </div>\n            </div>\n            <div className=\"gf-form-inline\">\n              <div className=\"gf-form\">\n                <InlineFormLabel width={10} tooltip=\"OAuth client secret. This must be configured in the authentication server, too.\">\n                  Client secret\n                </InlineFormLabel>\n                <Input\n                  value={secureJsonData?.clientSecret || \"\"}\n                  placeholder={authConfigured ? \"Value configured\" : \"No client secret configured yet\"}\n                  onChange={evt => this.onClientSecretChange(evt.currentTarget.value?.trim())}\n                  title=\"OAuth client secret. This must be configured in the authentication server, too.\"\n                  type=\"password\"\n                ></Input>\n              </div>\n            </div>\n          </React.Fragment>\n        }\n\n      </div>\n    );\n  }\n}\n","import { SelectableValue } from '@grafana/data';\nimport { ColorPicker, InlineFormLabel, Input, Segment, SegmentAsync } from '@grafana/ui';\nimport { QueryEditor } from 'QueryEditor';\nimport React, { PureComponent, ReactNode } from 'react';\n\n// see https://grafana.com/docs/grafana/latest/panels-visualizations/visualizations/node-graph/\n\ninterface NodeGraphProps {\n  /**\n   * For the time being the editor only supports the default primary and secondary attributes\n   * \n   * Key \"\": default attributes\n   * Other keys: entity types\n   * Specific settings per type overwrite the default keys\n   */\n  primaryNodeAttributes?: Record<string, string[]>;\n  secondaryNodeAttributes?: Record<string, string[]>;\n  arcColorNodeAttributes?: Record<string, string[]>;\n  arcColorComplementLabel?: string;\n  primaryArcColor?: string;\n  secondaryArcColor?: string;\n  proposedAttributes?: Array<SelectableValue<string>>;\n  attributesChanged(kind: \"primary\"|\"secondary\"|\"arcColor\", attributes: Record<string, string[]>|undefined): void;\n  onColorChanged(primaryOrSecondary: boolean, color: string): void;\n  onArcColorComplementChanged(label?: string): void;\n}\n\n// a stateless subcomponent\nexport class GraphQueryEditor extends PureComponent<NodeGraphProps, Readonly<{}>> {\n\n\n  private attributeChanged(kind: \"primary\"|\"secondary\"|\"arcColor\", newValue?: string, oldValue?: any) {\n    newValue = newValue?.trim() || \"\";\n    oldValue = oldValue || \"\";\n    if (newValue === oldValue)\n      {return;}\n    let records = (this.props as any)[kind + \"NodeAttributes\"];\n    if (!records)\n      {records = {};}\n    else\n      {records = {...records};}\n    const attributes: any[] = \"\" in records ? records[\"\"] : [];\n    const idx: number = attributes.indexOf(oldValue);\n    if (idx < 0) {  \n      if (!newValue) \n        {return;}\n      attributes.push(newValue);\n    } else {\n      if (newValue) {\n        attributes.splice(idx, 1, newValue); // TODO convert value to numeric format?\n      } else {\n        attributes.splice(idx, 1);\n      }\n    }\n    records[\"\"] = [...new Set(attributes)];\n    this.props.attributesChanged(kind, records); // propogate to parent component\n  }\n\n  private selector(\n    kind: \"primary\"|\"secondary\"|\"arcColor\",\n    proposedValues?: Array<SelectableValue<string>>,\n    value?: string,\n  ): ReactNode {\n    \n    return (\n      <Segment<string>\n        value={QueryEditor.toOption(value || \"\")}\n        onChange={val => this.attributeChanged(kind, val.value, value)}\n        options={proposedValues || []}\n        inputMinWidth={6}\n        allowCustomValue\n      ></Segment>\n    );\n    // options={proposedValues?.map(val => QueryEditor.toOption(val)) || []}\n  }\n\n  render(): ReactNode {\n    const {primaryNodeAttributes, secondaryNodeAttributes, arcColorNodeAttributes, primaryArcColor, secondaryArcColor, arcColorComplementLabel, proposedAttributes } = this.props;\n    const primaries: string[] = (primaryNodeAttributes && \"\" in primaryNodeAttributes ? primaryNodeAttributes[\"\"] : []).map(attr => attr.trim()).filter(attr => attr);\n    const secondaries: string[] = (secondaryNodeAttributes && \"\" in secondaryNodeAttributes ? secondaryNodeAttributes[\"\"] : []).map(attr => attr.trim()).filter(attr => attr);\n    const arcColors: string[] = (arcColorNodeAttributes && \"\" in arcColorNodeAttributes ? arcColorNodeAttributes[\"\"] : []).map(attr => attr.trim()).filter(attr => attr);\n    const primaryElements: ReactNode[] = primaries.map(attribute => this.selector(\"primary\", proposedAttributes, attribute))\n    primaryElements.push(this.selector(\"primary\", proposedAttributes));\n    const secondaryElements: ReactNode[] = secondaries.map(attribute => this.selector(\"secondary\", proposedAttributes, attribute))\n    secondaryElements.push(this.selector(\"secondary\", proposedAttributes));\n    const arcColorElements: ReactNode[] = arcColors.map(attribute => this.selector(\"arcColor\", proposedAttributes, attribute))\n    arcColorElements.push(this.selector(\"arcColor\", proposedAttributes));\n    const primaryArcColor1 = primaryArcColor||\"green\";\n    const secondaryArcColor1 = secondaryArcColor||\"red\";\n    \n    const result = \n      <React.Fragment>\n        <h6>Graph settings</h6>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"Primary attributes for node values\">\n              Primary node properties\n            </InlineFormLabel>\n            {primaryElements}\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"Secondary attributes for node values; shown in a smaller font size below the primary values\">\n              Secondary node properties\n            </InlineFormLabel>\n            {secondaryElements}\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"Attribute for coloring of node circles; must take values between 0 and 1.\">\n              Arc color properties\n            </InlineFormLabel>\n            {arcColorElements}\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"Label for the complement of the selected arc color property\">\n              Arc color complement\n            </InlineFormLabel>\n            <Input\n              value={arcColorComplementLabel}\n              onChange={evt => this.props.onArcColorComplementChanged(evt.currentTarget.value?.trim() || \"\")}\n            ></Input>\n          </div>\n        </div>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"Primary arc color. Only relevant if a property for the arc color is selected.\">\n              Primary arc color\n            </InlineFormLabel>\n            &nbsp;\n            <ColorPicker\n              color={primaryArcColor1}\n              onChange={color => this.props.onColorChanged(true, color)}\n            ></ColorPicker>\n            &nbsp; &nbsp; &nbsp;\n            <InlineFormLabel width={12} tooltip=\"Secondary arc color. Only relevant if a property for the arc color is selected.\">\n              Secondary arc color\n            </InlineFormLabel>\n            &nbsp;\n            <ColorPicker\n              color={secondaryArcColor1}\n              onChange={color => this.props.onColorChanged(false, color)}\n            ></ColorPicker>\n          </div>\n        </div>\n      </React.Fragment>;\n    return result;\n  }\n\n}\n","\nexport interface AggregationPeriodBuilder {\n\n    build(): AggregationPeriod;\n\n    setSeconds(s: number): this;\n    setMinutes(s: number): this;\n    setHours(s: number): this;\n    setDays(s: number): this;\n    setMonths(s: number): this;\n    setYears(s: number): this;\n\n}\n\nclass AggregationPeriodBuilderImpl implements AggregationPeriodBuilder {\n\n    private _seconds = 0;\n    private _minutes = 0;\n    private _hours = 0;\n    private _days = 0;\n    private _months = 0;\n    private _years = 0;\n\n    private static _validate(s: number): number {\n        if (!isFinite(s))\n            {throw new Error(\"Invalid number \" + s);}\n        // TODO validate if integer?\n        return s;\n    }\n\n    // @ts-ignore\n    constructor(private readonly _build: (s, m, h, d, mn, y) => AggregationPeriod) {}\n\n    setSeconds(s: number): this {\n        this._seconds = AggregationPeriodBuilderImpl._validate(s);\n        return this;\n    }\n\n    setMinutes(s: number): this {\n        this._minutes = AggregationPeriodBuilderImpl._validate(s);\n        return this;\n    }\n\n    setHours(s: number): this {\n        this._hours = AggregationPeriodBuilderImpl._validate(s);\n        return this;\n    }\n\n    setDays(s: number): this {\n        this._days = AggregationPeriodBuilderImpl._validate(s);\n        return this;\n    }\n\n    setMonths(s: number): this {\n        this._months = AggregationPeriodBuilderImpl._validate(s);\n        return this;\n    }\n\n    setYears(s: number): this {\n        this._years = AggregationPeriodBuilderImpl._validate(s);\n        return this;\n    }\n\n    build(): AggregationPeriod {\n        return this._build(this._seconds, this._minutes, this._hours, this._days, this._months, this._years);\n    }\n\n}\n\nexport class AggregationPeriod {\n\n    private readonly _isEmpty: boolean;\n    private readonly _isTimePartEmpty: boolean;\n\n    private constructor(\n        private _seconds: number,\n        private _minutes: number,\n        private _hours: number,\n        private _days: number,\n        private _months: number,\n        private _years: number\n    ) {\n        this._isTimePartEmpty = [_seconds, _minutes, _hours].findIndex(n => n !== 0) < 0;\n        this._isEmpty = this._isTimePartEmpty  && [_days, _months, _years].findIndex(n => n !== 0) < 0;\n    }\n\n    static builder(other?: AggregationPeriod): AggregationPeriodBuilder {\n        // @ts-ignore\n        const builder = new AggregationPeriodBuilderImpl((s, m, h, d, mn, y) => new AggregationPeriod(s, m, h, d, mn, y));\n        if (other) {\n            builder.setSeconds(other._seconds);\n            builder.setMinutes(other._minutes);\n            builder.setHours(other._hours);\n            builder.setDays(other._days);\n            builder.setMonths(other._months);\n            builder.setYears(other._years);\n        }\n        return builder;\n    }\n\n    static deserialize(str?: string): AggregationPeriod|undefined {\n        if (!str)\n            {return undefined;}\n        try {\n            str = str.toUpperCase();\n            if (!str.startsWith(\"P\"))\n                {return undefined;}\n            const hasSeparator: boolean = str.indexOf(\"T\") > 0;\n            const builder: AggregationPeriodBuilder = AggregationPeriod.builder();\n            let startIdx = 0;\n            const yr: number = str.indexOf(\"Y\", startIdx);\n            if (yr > startIdx) {\n                builder.setYears(parseInt(str.substring(startIdx+1, yr), 10));\n                startIdx = yr;\n            }\n            const months = str.indexOf(\"M\", startIdx);\n            if (months > startIdx && (!hasSeparator || months < str.indexOf(\"T\", startIdx))) {\n                builder.setMonths(parseInt(str.substring(startIdx+1, months), 10));\n                startIdx = months;\n            }\n            const days = str.indexOf(\"D\", startIdx);\n            if (days > startIdx) {\n                builder.setDays(parseInt(str.substring(startIdx+1, days), 10));\n                startIdx = days;\n            }\n            if (hasSeparator)\n                {startIdx += 1;}\n            const hours = str.indexOf(\"H\", startIdx);\n            if (hours > startIdx) {\n                builder.setHours(parseInt(str.substring(startIdx+1, hours), 10));\n                startIdx = hours;\n            }\n            const minutes = str.indexOf(\"M\", startIdx);\n            if (minutes > startIdx && hasSeparator && minutes > str.indexOf(\"T\", startIdx)) {\n                builder.setMinutes(parseInt(str.substring(startIdx+1, minutes), 10));\n                startIdx = minutes;\n            }\n            const seconds = str.indexOf(\"S\", startIdx);\n            if (seconds > startIdx) {\n                builder.setSeconds(parseInt(str.substring(startIdx+1, seconds), 10));\n                startIdx = seconds;\n            }\n            return builder.build();\n        } catch (e) {\n            console.log(\"Invalid aggregation period\", str);\n            return undefined;\n        }\n    }\n\n    // P[n]Y[n]M[n]DT[n]H[n]M[n]S or P[n]W\n    serialize(): string {\n        if (this._isEmpty)\n            {return \"PT0S\";}\n        let str = \"P\";\n        const attach = (arg: [number, string]): void => {\n            if (arg[0] !== 0)\n                {str += arg[0] + arg[1];}\n        };\n        ([([this._years, \"Y\"]), ([this._months, \"M\"]), ([this._days, \"D\"])] as Array<[number, string]>).forEach(attach);\n        if (!this._isTimePartEmpty)\n            {str += \"T\";}\n        ([([this._hours, \"H\"]), ([this._minutes, \"M\"]), ([this._seconds, \"S\"])] as Array<[number, string]>).forEach(attach);\n        return str;\n    }\n\n    seconds(): number {\n        return this._seconds;\n    }\n\n    minutes(): number {\n        return this._minutes;\n    }\n\n    hours(): number {\n        return this._hours;\n    }\n\n    days(): number {\n        return this._days;\n    }\n\n    months(): number {\n        return this._months;\n    }\n\n    years(): number {\n        return this._years;\n    }\n\n}\n","import { SelectableValue } from \"@grafana/data\";\nimport { InlineFormLabel, Input, MultiSelect, Segment } from \"@grafana/ui\";\nimport { AggregationPeriod, AggregationPeriodBuilder } from \"AggregationHelper\";\nimport React, { PureComponent, ReactNode } from 'react';\nimport { aggregationMethodForValue, TimeseriesAggregationMethod } from \"types\";\n\ninterface TsAggregationProps {\n\n    aggrMethod?: string;\n    aggrPeriodDuration?: string;\n    onAggregationMethodChanged(aggrMethod: TimeseriesAggregationMethod[]): void;\n    onAggregationPeriodChanged(aggrPeriodDuration: AggregationPeriod): void;\n}\n  \n\n// a stateless subcomponent\nexport class TsAggregationEditor extends PureComponent<TsAggregationProps, Readonly<{}>> {\n\n    private static readonly AGGREGATION_METHODS: Array<SelectableValue<TimeseriesAggregationMethod>> = [\n        {value: TimeseriesAggregationMethod.TOTAL_COUNT, label: \"Total count\", description: \"Number of points\", title: \"Number of points\"},\n        {value: TimeseriesAggregationMethod.DISTINCT_COUNT, label: \"Distinct count\", description: \"Number of distinct values\", title: \"Number of distinct values\"},\n        {value: TimeseriesAggregationMethod.SUM, label: \"Sum\", description: \"\", title: \"\"},\n        {value: TimeseriesAggregationMethod.AVERAGE, label: \"Average\", description: \"\", title: \"\"},\n        {value: TimeseriesAggregationMethod.MIN, label: \"Min\", description: \"\", title: \"\"},\n        {value: TimeseriesAggregationMethod.MAX, label: \"Max\", description: \"\", title: \"\"},\n        {value: TimeseriesAggregationMethod.STANDARD_DEVIATION, label: \"Standard deviation\", description: \"\", title: \"\"},\n        {value: TimeseriesAggregationMethod.SUM_SQUARE, label: \"Sum square\", description: \"Sum of squared valued\", title: \"Sum of squared valued\"},\n    ];\n\n    private methodsChanged(aggrMethod: Array<SelectableValue<TimeseriesAggregationMethod>>) {\n        this.props.onAggregationMethodChanged(aggrMethod.map(val => val.value).filter(m => m) as TimeseriesAggregationMethod[]);\n    }\n\n    private periodChanged(builder: AggregationPeriodBuilder, method: (s: number) => AggregationPeriodBuilder, value?: string) {\n        const number = parseInt(value||\"\", 10);\n        if (isFinite(number)) {\n            builder = method.bind(builder)(number);\n            this.props.onAggregationPeriodChanged(builder.build());\n        }\n    }\n\n    render(): ReactNode { \n        const {aggrMethod, aggrPeriodDuration} = this.props;\n        const aggrMethod1: TimeseriesAggregationMethod[] = (aggrMethod || \"\").split(\",\").map(m => m.trim()).map(aggregationMethodForValue).filter(m => m) as TimeseriesAggregationMethod[];\n        const period: AggregationPeriod = AggregationPeriod.deserialize(aggrPeriodDuration) || AggregationPeriod.builder().build();\n        const builder = AggregationPeriod.builder(period);\n        const elements = [\n          <div className=\"gf-form-inline\" key=\"aggrmethod\">\n            <div className=\"gf-form\">\n                <InlineFormLabel width={12} tooltip=\"Temporal aggregation of values. Deselect all to retrieve the original timeseries.\">\n                    Aggregation method\n                </InlineFormLabel>\n                <MultiSelect<TimeseriesAggregationMethod>\n                    options={TsAggregationEditor.AGGREGATION_METHODS}\n                    value={aggrMethod1}\n                    onChange={this.methodsChanged.bind(this)}\n                    width={20}\n                ></MultiSelect>\n            </div>\n          </div>\n        ];\n        if (aggrMethod1.length > 0) {\n            elements.push(\n                <div className=\"gf-form-inline\" key=\"aggrperiod\">\n                    <div className=\"gf-form\">\n                        <InlineFormLabel width={12} tooltip=\"Temporal aggregation duration. Set all entries to 0 to aggregate over the whole time interval.\">\n                            Aggregation period\n                        </InlineFormLabel>\n                        <Input\n                            value={period.years()}\n                            onChange={val => this.periodChanged(builder, builder.setYears, val?.currentTarget?.value?.trim())}\n                            type=\"number\"\n                            width={5}\n                            title=\"Years\"\n                        ></Input>\n                        <InlineFormLabel width={2}>\n                            Y\n                        </InlineFormLabel>\n                        <Input\n                            value={period.months()}\n                            onChange={val => this.periodChanged(builder, builder.setMonths, val?.currentTarget?.value?.trim())}\n                            type=\"number\"\n                            width={5}\n                            title=\"Months\"\n                        ></Input>\n                        <InlineFormLabel width={2}>\n                            M\n                        </InlineFormLabel>\n                        <Input\n                            value={period.days()}\n                            onChange={val => this.periodChanged(builder, builder.setDays, val?.currentTarget?.value?.trim())}\n                            type=\"number\"\n                            width={5}\n                            title=\"Days\"\n                        ></Input>\n                        <InlineFormLabel width={2}>\n                            DT\n                        </InlineFormLabel>\n                        <Input\n                            value={period.hours()}\n                            onChange={val => this.periodChanged(builder, builder.setHours, val?.currentTarget?.value?.trim())}\n                            type=\"number\"\n                            width={5}\n                            title=\"Hours\"\n                        ></Input>\n                        <InlineFormLabel  width={2}>\n                            H\n                        </InlineFormLabel>\n                        <Input\n                            value={period.minutes()}\n                            onChange={val => this.periodChanged(builder, builder.setMinutes, val?.currentTarget?.value?.trim())}\n                            type=\"number\"\n                            width={5}\n                            title=\"Minutes\"\n                        ></Input>\n                        <InlineFormLabel width={2}>\n                            M\n                        </InlineFormLabel>\n                        <Input\n                            value={period.seconds()}\n                            onChange={val => this.periodChanged(builder, builder.setSeconds, val?.currentTarget?.value?.trim())}\n                            type=\"number\"\n                            width={5}\n                            title=\"Seconds\"\n                        ></Input>\n                        <InlineFormLabel width={2}>\n                            S\n                        </InlineFormLabel>\n                    </div>\n                </div>\n            );\n        }\n        const frag = <React.Fragment>\n            <h6>Temporal aggregation</h6>\n            {elements}\n        </React.Fragment>\n        return frag;\n    }\n\n\n}\n","import { SelectableValue } from '@grafana/data';\nimport { InlineFormLabel, Input, Segment, Select } from '@grafana/ui';\nimport React, { PureComponent, ReactNode } from 'react';\nimport { georelFromValue, GeorelProperty } from 'types';\n\n/**\n * Examples of valid geo queries:\n *   - ?georel=near;maxDistance==2000&geometry=Point&coordinates=[8,40]\n *   - near;maxDistance==2000\n *   - \n * \n */\n interface GeoParamsProps {\n\n /**\n  * Filter for geometric properties.\n  * Geo relationship as per clause 4.10.\n  * Examples:\n  *  - near;maxDistance==2000 (in m; also minDistance)\n  *  - equals\n  *  - disjoint\n  *  - intersects\n  *  - within\n  *  - contains\n  *  - overlaps\n  */\n  georel?: string;\n  /**\n   * Filter for geometric properties.\n   * Geometry as per clause 4.10.\n   * Examples:\n   *   - Point, Polygon\n   */\n  geometry?: string;\n   /**\n    * Filter for geometric properties.\n    * Coordinates serialized as a string as per clause 4.10.\n    * Examples\n    *   - [8,40] (for Point)\n    *   - [[[100.0,0.0],[101.0,0.0],[101.0,1.0],[100.0,1.0],[100.0,0.0]]] (for Polygon)\n    */\n  coordinates?: string;\n  /**\n   * Filter for geometric properties. Default: \"location\". Typical examples:\n   *   - location\n   *   - observationSpace\n   *   - operationSpace\n   */\n  geoproperty?: string; \n  onGeoChanged(geo: {georel?: string, geometry?: string, coordinates?: string, geoproperty?: string}): void;\n}\n\nenum DistanceType {\n  MAX_DISTANCE = \"maxDistance\",\n  MIN_DISTANCE = \"minDistance\"\n}\n\n\nexport class GeoParamsEditor extends PureComponent<GeoParamsProps, Readonly<{}>> {\n\n  private static readonly DISTANCE_OPTIONS: Array<SelectableValue<DistanceType>> = [\n    {value: DistanceType.MAX_DISTANCE, label: \"max radius\", description: \"Maximum distance from specified point\", title: \"Maximum distance from specified point (the default)\"},\n    {value: DistanceType.MIN_DISTANCE, label: \"min radius\", description: \"Minimum distance from specified point\", title: \"Minimum distance from specified point \"},\n  ];\n\n  private static readonly GEOREL_OPTIONS: Array<SelectableValue<GeorelProperty>> = [\n    {value: GeorelProperty.NONE, label: \"none\", description: \"Disable geo filters\", title: \"Disable geo filters\"},\n    {value: GeorelProperty.NEAR, label: \"near\", description: \"Specify a radius for the included points\", title: \"Specify a radius for the included points\"},\n    {value: GeorelProperty.EQUALS, label: \"equals\", description: \"Geometries must match exactly\", title: \"Geometries must match exactly\"},\n    {value: GeorelProperty.DISJOINT, label: \"disjoint\", description: \"Geometry must lie outside the specified one\", title: \"Geometry must lie outside the specified one\"},\n    {value: GeorelProperty.INTERSECTS, label: \"intersects\", description: \"Geometry must intersect the specified one; shared borders are sufficient\", title: \"Geometry must intersect the specified one; shared borders are sufficient\"},\n    {value: GeorelProperty.WITHIN, label: \"within\", description: \"Geometries must lie within the specified one\", title: \"Geometries must lie within the specified one\"},\n    {value: GeorelProperty.CONTAINS, label: \"contains\", description: \"Geometries must contain the specified one\", title: \"Geometries must contain the specified one\"},\n    {value: GeorelProperty.OVERLAPS, label: \"overlaps\", description: \"Geometry must overlap the specified one; does not match on shared borders\", title: \"Geometry must overlap the specified one; does not match on shared borders\"}, \n  ];\n\n  // note: these are just proposals, the user can enter other geometries\n  private static readonly GEOMETRY_OPTIONS: Array<SelectableValue<string>> = [\n    {value: \"Point\", label: \"Point\", description: \"A point specified by longitude and latitude\", title: \"A point specified by longitude and latitude\"},\n    {value: \"LineString\", label: \"LineString\", description: \"A line string specified by an array of points\", title: \"A line string specified by an array of points\"},\n    {value: \"Polygon\", label: \"Polygon\", description: \"A polygon specified by an array of line strings\", title: \"A polygon specified by an array of line strings\"},\n  ];\n\n  // note: these are just proposals, the user can enter other geometries\n  private static readonly GEOPROPERTY_OPTIONS: Array<SelectableValue<string>> = [\n    {value: \"location\", label: \"location\", description: \"The location of an entity (default)\", title: \"The location of an entity (default)\"},\n    {value: \"observationSpace\", label: \"observationSpace\", description: \"The location observed by an entity\", title: \"The location observed by an entity\"},\n    {value: \"operationSpace\", label: \"operationSpace\", description: \"The location in which an entity is active\", title: \"The location in which an entity is active\"},\n  ];\n\n  private static buildGeorel(oldGeorel: string|undefined, options: {newType?: GeorelProperty, newDistance?: number, newDistanceType?: DistanceType}): string {\n    const type: GeorelProperty = georelFromValue(options.newType || oldGeorel);\n    if (type === GeorelProperty.NONE)\n      {return \"\";}\n    if (type !== GeorelProperty.NEAR)\n      {return type.valueOf();}\n    let distance = options.newDistance;\n    if (distance === undefined) {\n      const lastEq: number = oldGeorel?.lastIndexOf(\"==\")||-1;\n      distance = lastEq > 0 ? parseFloat(oldGeorel?.substring(lastEq+2)?.trim()!) : 20_000;\n    } \n    if (!(distance > 0))\n      {distance = 20_000;}\n    let distType: DistanceType|undefined = options.newDistanceType;\n    if (distType === undefined) {\n      const firstSem: number = oldGeorel?.indexOf(\";\")||-1;\n      const eq: number = oldGeorel?.lastIndexOf(\"==\")||-1;\n      if (firstSem > 0 && eq > 0 && oldGeorel?.substring(firstSem+1, eq).trim().toLowerCase() === \"mindistance\")\n        {distType = DistanceType.MIN_DISTANCE;}\n      else\n        {distType = DistanceType.MAX_DISTANCE;}\n    }\n    return \"near;\" + distType.valueOf() + \"==\" + distance;\n  } \n\n  private georelChanged(georel: GeorelProperty|undefined) {\n    if (!georel)\n      {georel = GeorelProperty.NONE;}\n    const vals = {...this.props, georel: GeoParamsEditor.buildGeorel(this.props.georel, {newType: georel}), onGeoChanged: undefined};\n    this.props.onGeoChanged(vals as any);\n  }\n\n  private distanceTypeChanged(value: DistanceType|undefined) {\n    if (!value)\n      {value = DistanceType.MAX_DISTANCE;}\n    const vals = {...this.props, georel: GeoParamsEditor.buildGeorel(this.props.georel, {newDistanceType: value}), onGeoChanged: undefined};\n    this.props.onGeoChanged(vals as any);\n  }\n\n  private distanceChanged(value: number|undefined) {\n    if (!(value! > 0))\n      {value = 20_000;}\n    const vals = {...this.props, georel: GeoParamsEditor.buildGeorel(this.props.georel, {newDistance: value}), onGeoChanged: undefined};\n    this.props.onGeoChanged(vals as any);\n  }\n\n  // TODO some sort of client side validation\n  private geometryChanged(value: string|undefined) {\n    const vals = {...this.props, geometry: value, onGeoChanged: undefined};\n    this.props.onGeoChanged(vals as any);\n  }\n\n  private geopropertyChanged(value: string|undefined) {\n    const vals = {...this.props, geoproperty: value, onGeoChanged: undefined};\n    this.props.onGeoChanged(vals as any);\n  }\n\n  private coordinatesChanged(coords: string|undefined) {\n    const vals = {...this.props, coordinates: coords, onGeoChanged: undefined};\n    this.props.onGeoChanged(vals as any);\n  }\n\n  render(): ReactNode { \n    const {georel, geometry, coordinates, geoproperty} = this.props;\n\n    const georelType: GeorelProperty = georelFromValue(georel);\n    const georelFilter = <React.Fragment>\n        <h6>Geo filters</h6>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"Specify the geo filter to apply (georel property)\">\n              Geo relation filter\n            </InlineFormLabel>\n            <Select<GeorelProperty>\n              options={GeoParamsEditor.GEOREL_OPTIONS}\n              value={georelType}\n              onChange={val => this.georelChanged(val?.value)}\n              width={20}\n              ></Select>\n          </div>\n        </div>\n      </React.Fragment> ;\n    if (georelType === GeorelProperty.NONE)\n      {return georelFilter;}\n    let nearTypeFilters = <React.Fragment></React.Fragment>\n    if (georelType === GeorelProperty.NEAR) {\n      const isMinDistance: boolean = georel?.indexOf(\"min\")! > 0;\n      let distance: number = georel?.indexOf(\"==\")! > 0 ? parseFloat(georel?.substring(georel?.lastIndexOf(\"==\") + 2)!) : 20_000;\n      if (!(distance > 0))\n        {distance = 20_000}\n      nearTypeFilters = <React.Fragment>\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"Distance in meters from specified center\">\n              Distance (m)\n            </InlineFormLabel>\n            <Input \n              value={distance}\n              onChange={evt => this.distanceChanged(parseFloat(evt.currentTarget?.value?.trim()))}\n              type=\"number\"\n              width={12}\n              title=\"Distance in meters\"\n            ></Input>\n            <Select<DistanceType>\n              options={GeoParamsEditor.DISTANCE_OPTIONS}\n              value={isMinDistance ? DistanceType.MIN_DISTANCE : DistanceType.MAX_DISTANCE}\n              onChange={val => this.distanceTypeChanged(val?.value)}\n              width={20}\n              ></Select>\n          </div>\n        </div>\n      </React.Fragment>\n    }\n    \n    return <React.Fragment>\n      {georelFilter}\n      {nearTypeFilters}\n      <div className=\"gf-form-inline\">\n        <div className=\"gf-form\">\n          <InlineFormLabel width={12} tooltip=\"Specify the geo filter to apply (georel property)\">\n            Geo relation filter\n          </InlineFormLabel>\n          <Segment<string>\n              value={geometry || \"Point\"}\n              onChange={geo => this.geometryChanged(geo?.value)}\n              options={GeoParamsEditor.GEOMETRY_OPTIONS}\n              inputMinWidth={12}\n              allowCustomValue\n            ></Segment>\n        </div>\n      </div>\n      <div className=\"gf-form-inline\">\n        <div className=\"gf-form\">\n          <InlineFormLabel width={12} tooltip=\"Specify coordinates \">\n            Coordinates\n          </InlineFormLabel>\n          <Input\n              value={coordinates || \"\"}\n              onChange={evt => this.coordinatesChanged(evt.currentTarget?.value?.trim())}\n              width={12}\n              placeholder=\"[8,40]\"\n              type=\"text\"\n            ></Input>\n        </div>\n      </div>\n      <div className=\"gf-form-inline\">\n        <div className=\"gf-form\">\n          <InlineFormLabel width={12} tooltip=\"Specify the geo property (geoproperty)\">\n            Geo property\n          </InlineFormLabel>\n          <Segment<string>\n              value={geoproperty||\"location\"}\n              onChange={geo => this.geopropertyChanged(geo?.value)}\n              options={GeoParamsEditor.GEOPROPERTY_OPTIONS}\n              inputMinWidth={12}\n              allowCustomValue\n            ></Segment>\n        </div>\n      </div>\n    </React.Fragment>\n\n  }\n\n}\n","import defaults from 'lodash/defaults';\n\n\nimport React, { ChangeEvent, PureComponent } from 'react';\nimport { InlineFormLabel, Segment, MultiSelect, Checkbox, Select, Input } from '@grafana/ui';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { NgsildDataSource } from './datasource';\nimport { defaultQuery, NgsildSourceOptions, NgsildQuery, NgsildQueryType, queryTypeForValue, TimeseriesAggregationMethod } from './types';\nimport {  Entity, EntityType, INVALID_ATTRIBUTES } from 'ngsildTypes';\nimport { GraphQueryEditor } from 'components/GraphQueryEditor';\nimport { TsAggregationEditor } from 'components/TimeseriesAggregationEditor';\nimport { AggregationPeriod } from 'AggregationHelper';\nimport { GeoParamsEditor } from 'components/GeoParamsEditor';\nimport { getTemplateSrv } from \"@grafana/runtime\";\n\ntype Props = QueryEditorProps<NgsildDataSource, NgsildQuery, NgsildSourceOptions>;\n\n// contains available options; samples for the recommender system\ninterface QueryState {\n  types?: EntityType[];\n  entityIdsByType?: Record<string, string[]>;\n  entitiesIdsVariable?: string[];\n  attributesByEntityId?: Record<string, string[]>;\n  attributes?: string[];\n}\n\n/**\n * TODO\n *   - downsampling option (enabled by default?)\n */\nexport class QueryEditor extends PureComponent<Props, QueryState> {\n\n  private static readonly EMPTY_OPTION_ID: string = \"__EMPTY__\";\n  private static readonly EMPTY_OPTION: SelectableValue<string> = Object.freeze({name: QueryEditor.EMPTY_OPTION_ID, label: \"\"});\n  private static readonly QUERY_TYPES: Array<SelectableValue<NgsildQueryType>> = [\n    {value: NgsildQueryType.TEMPORAL, label: \"temporal\", description: \"Timeseries request\", title: \"Temporal queries target timeseries data, commonly used in graph plots\"},\n    {value: NgsildQueryType.ENTITY, label: \"current value\", description: \"Current value request\", title: \"Query the current value of one or multiple entity attributes\"},\n    {value: NgsildQueryType.GEO, label: \"geo\", description: \"Geo request\", title: \"Query the location of entities, useful for map visualizations\"},\n    {value: NgsildQueryType.NODE_GRAPH, label: \"node graph\", description: \"Node graph request\", title: \"Retrieve a directed graph dataset for the node graph panel\"},\n    {value: NgsildQueryType.MULTITEMPORAL, label: \"multitemporal\", description: \"Multi Temporal request\", title: \"Query the history of one or multiple entities\"},\n  ];\n\n  constructor(props: Props) {\n    super(props);\n    this.loadData();\n  }\n\n  private loadData(): Promise<unknown> { // initial recommendations\n    const prom1 = this.props.datasource.request({queryType: NgsildQueryType.TYPES}) // TODO limit?\n      .then((response: { data: EntityType[]; status: number }) => {\n        const types = response.data;\n        types.forEach(type => {\n          const idx: number = type.typeName?.lastIndexOf(\".\");\n          type.shortName = idx >= 0 && idx < type.typeName.length-1 ? type.typeName.substring(idx+1) : type.typeName;\n        });\n        return new Promise<EntityType[]>(resolve => this.setState({ types: types }, () => resolve(types)));\n      });\n    const prom2 = this.props.datasource.request({queryType: NgsildQueryType.ATTRIBUTES})\n      .then((response: { data: { attributeList: string[] }; status: number }) => new Promise<void>(resolve => this.setState({ attributes: response.data.attributeList }, resolve)));\n    const prom3 = prom1.then(async (types: EntityType[]) => {\n      if (types.length > 25)\n        {types = types.filter((_, idx) => idx<25);}\n      const type: string|undefined = types.length > 0 ? types.map(type => type.typeName).join(\",\") : undefined;\n      // TODO ideally, we'd like to retrieve samples for the different types\n      return this.loadEntities(this.props.datasource, type, 100);\n    });\n    return Promise.all([prom1, prom2, prom3]);\n  }\n\n  private async loadEntities(datasource: NgsildDataSource, type?: string, limit?: number) {\n    if (!type)\n      {return;}\n    const typeEntitiesLoaded: boolean = !!this.state?.entityIdsByType && type in this.state.entityIdsByType;\n    if (typeEntitiesLoaded)\n      {return;}\n    \n    let response: { data: Entity[]; status: number } = await datasource.request({queryType: NgsildQueryType.ENTITY, entityType: type}, {limit: limit||25});\n    const entities: Entity[] = response.data\n\n    let variableVal = getTemplateSrv().replace(\"$Device\")\n    if (!variableVal.includes(\"urn:ngsi-ld:\")){\n      variableVal = \"\"\n    }\n    response = await datasource.request({queryType: NgsildQueryType.ENTITY, variableValue: variableVal }, {limit: limit||25});\n    const entitiesVar: Entity[] = response.data\n\n    const entitiesByVariable: string[] = entitiesVar.map(entity => entity.id);\n    if (entities.length === 0)\n      {return;}\n    const entitiesByType: Record<string, string[]> = \n        this.state?.entityIdsByType ? {...this.state.entityIdsByType} : {};      \n    entitiesByType[type] = entities.map(entity => entity.id);\n    const attributesById = \n        this.state?.attributesByEntityId ? {...this.state.attributesByEntityId} : {};\n    const attributesForEntity = (entity: Entity): string[] => Object.entries(entity).filter(([key, value]) => {\n      if (INVALID_ATTRIBUTES.indexOf(key) >= 0)\n        {return false;}\n      if (!value.value || !isFinite(value.value as any))\n        {return false;}\n      return true;\n    }).map(([key, _]) => key);\n    const newAttributesByIds = Object.fromEntries(entities.map(entity => [entity.id, attributesForEntity(entity)]));\n    Object.assign(attributesById, newAttributesByIds);\n    return new Promise<void>(resolve => this.setState({entityIdsByType: entitiesByType, attributesByEntityId: attributesById, entitiesIdsVariable: entitiesByVariable}, resolve));\n  }\n\n  private async loadAttributes(datasource: NgsildDataSource, entityId?: string) {\n    if (!entityId)\n      {return;}\n    const attributesLoaded: boolean = !!this.state?.attributesByEntityId && entityId in this.state.attributesByEntityId;\n    if (attributesLoaded)\n      {return;}\n    let response: { data: Entity; status: number } = await datasource.request({queryType: NgsildQueryType.ENTITY, entityId: entityId});\n    const entity: Entity = response.data\n    if (!entity)\n      {return;}\n    const attrs: string[] = Object.keys(entity).filter(attr => INVALID_ATTRIBUTES.indexOf(attr) < 0)\n    if (attrs.length === 0)\n      {return;}\n    const attrsByEntity: Record<string, string[]> = \n      this.state?.attributesByEntityId ? {...this.state.attributesByEntityId} : {};\n    attrsByEntity[entityId] = attrs;\n    this.setState({ attributesByEntityId: attrsByEntity });\n  }\n\n  /*\n  onMeasurementChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onChange, query, onRunQuery } = this.props;\n    onChange({ ...query, measurement: event.target.value?.trim() });\n    // executes the query\n    //onRunQuery();\n  };\n  */\n\n  static toOption<T>(value: T): SelectableValue<string> {\n    // @ts-ignore\n    const id: string = value.id || value.name || value + \"\";\n      // @ts-ignore\n    const name = value.name || id;\n    // @ts-ignore\n    const title: string|undefined = value.description || undefined;\n    return {\n      value: id,\n      label: name,\n      description: title,\n      title: title\n    };\n    //return this.props.datasource.uiSegmentSrv.getSegmentForValue(value);\n  }\n\n  getEntityTypes(): Array<SelectableValue<string>> {\n    if (!this.state?.types) {\n      return [];\n    }\n    const types = this.state.types\n      .map(type => {return {id: type.typeName, name: type.shortName, description: type.typeName};})\n      .map(QueryEditor.toOption)\n      .sort();\n    types.unshift(QueryEditor.EMPTY_OPTION);\n    return types;\n  }\n\n  getEntitiesIdsVariable(): Array<SelectableValue<string>> {\n    if (!this.state?.entitiesIdsVariable) {\n      return [];\n    }\n    const arr = this.state.entitiesIdsVariable.map(QueryEditor.toOption);\n      if (arr.length > 0)\n        {arr.unshift(QueryEditor.EMPTY_OPTION);}\n      return arr;\n  }\n  \n\n  getEntityIds(entityType?: string): Array<SelectableValue<string>> {\n    if (!this.state?.entityIdsByType)\n      {return [];}\n    if (!entityType) {\n      const result: Array<SelectableValue<string>> = [];\n      const entities: string[][] = Object.values(this.state.entityIdsByType);\n      const maxLength: number = entities.reduce((m, a2) => Math.max(m, a2.length), 0);\n      let cnt = 0;\n      outer: for (let arrIdx=0; arrIdx<maxLength; arrIdx++) {\n        for (let idx=0; idx<entities.length; idx++) {\n          const arr = entities[idx];\n          if (arrIdx < arr.length) {\n            result.push(QueryEditor.toOption(arr[arrIdx]))\n            if (cnt++ > 50)\n              {break outer;}\n          }\n        }\n      }\n      if (result.length > 0)\n        {result.unshift(QueryEditor.EMPTY_OPTION);}\n      return result;\n    }\n    if (this.state?.entityIdsByType && entityType in this.state.entityIdsByType) {\n      const arr = this.state.entityIdsByType[entityType].map(QueryEditor.toOption);\n      if (arr.length > 0)\n        {arr.unshift(QueryEditor.EMPTY_OPTION);}\n      return arr;\n    }\n    return [];\n  }\n\n  getAttributes(entityType?: string, entityId?: string, queryType?: NgsildQueryType, addEmpty?: boolean): Array<SelectableValue<string>> {\n    const attribs = this.getAttributesInternal(entityType, entityId, queryType);\n    if (addEmpty && attribs.length > 0)\n      {attribs.unshift(QueryEditor.EMPTY_OPTION);}\n    return attribs;\n  }\n\n  private getAttributesInternal(entityType?: string, entityId?: string, queryType?: NgsildQueryType): Array<SelectableValue<string>> {\n    if (queryType === NgsildQueryType.NODE_GRAPH) {  //  in the case of graph queries we should display all available attributes // TODO maybe show those applicable to entity type first?\n      if (this.state?.attributes?.length! > 0)\n        {return this.state.attributes!.map(QueryEditor.toOption).sort();}\n      if (this.state?.attributesByEntityId) {\n        return [...new Set(Object.values(this.state.attributesByEntityId).flatMap(arr => arr))].map(QueryEditor.toOption).sort();\n      }\n    }\n    if (entityId && this.state?.attributesByEntityId && entityId in this.state.attributesByEntityId)\n        {return this.state.attributesByEntityId[entityId].map(QueryEditor.toOption).sort();}\n    if (entityType) {\n      const type: EntityType|undefined = \n        entityType ? this.state?.types?.find(type => type.typeName === entityType) : undefined;\n      if (type)\n        {return type.attributeNames.map(QueryEditor.toOption).sort();}\n    }\n    return (this.state?.attributes || []).map(QueryEditor.toOption).sort();\n  }\n\n  onEntityTypeChange = (event: SelectableValue<string>) => {\n    const { onChange, query, datasource } = this.props;\n    let type: string = event.value?.trim() || \"\";\n    if (type === QueryEditor.EMPTY_OPTION_ID)\n      {type = \"\";}\n    this.loadEntities(datasource, type);\n    if (type)\n      {onChange({ ...query, entityType: type, entityId: undefined, attributes: undefined });}\n    else\n      {onChange({ ...query, entityType: type });}\n  };\n\n  onAttributeChange = (event: Array<SelectableValue<string>>) => {\n    const { onChange, query } = this.props;\n    onChange({ ...query, attributes: event.map(e => {\n      let attr: string = e.value?.trim() || \"\";\n      if (attr === QueryEditor.EMPTY_OPTION_ID)\n        {attr = \"\";}\n      return attr;\n    }).filter(e => e)});\n  };\n\n  onEntytiesChange = (event: any) => {\n    const { onChange, query } = this.props;\n\n    onChange({ ...query, entitiesIds: event.map((e: any) => {\n      let entity: string = e.value?.trim() || \"\";\n      if (entity === QueryEditor.EMPTY_OPTION_ID)\n        {entity = \"\";}\n      return entity;\n    })});\n  };\n\n  onQueryTypeChange = (event: SelectableValue<NgsildQueryType>) => {\n    const { onChange, query } = this.props;\n    onChange({ ...query, queryType: event?.value?.valueOf()||\"\"});\n  };\n\n  onEntityIdChange = (event: SelectableValue<string>) => {\n    let id: string = event.value?.trim() || \"\";\n    console.log(\"eaa\");\n    console.log(\"entity id changed to \" + id); \n    if (id === QueryEditor.EMPTY_OPTION_ID)\n      {id = \"\";}\n    const { onChange, query, datasource } = this.props;\n    this.loadAttributes(datasource, id);\n    if (id) {\n      {onChange({ ...query, entityId: id, attributes: [] });} // TODO keep attributes selected that are applicable to the entity at hand?\n    }else\n      {onChange({ ...query, entityId: id });}\n\n  };\n\n  onCustomQueryChange = (q: string|undefined) => {\n    const { onChange, query } = this.props;\n    onChange({ ...query, customQuery: q?.trim() || \"\"});\n  };\n\n  onVariableMultitempChange = (q: string|undefined) => {\n    const { onChange, query } = this.props;\n    onChange({ ...query, variableMultitemp: q?.trim() || \"\"});\n  };\n\n  onLongEntityNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const { onChange, query } = this.props;\n    onChange({ ...query, useLongEntityName: event.currentTarget.checked });\n  };\n\n  onGraphAttributesChanged = (kind: \"primary\"|\"secondary\"|\"arcColor\", attributes: Record<string, string[]>|undefined) => {\n    const { onChange, query } = this.props;\n    const key: string = kind + \"NodeAttributes\";\n    onChange({...query, [key]: attributes });\n  }\n  \n  onGraphColorChanged = (primaryOrSecondary: boolean, color?: string) => {\n    const { onChange, query } = this.props;\n    const key: string = (primaryOrSecondary ? \"primary\" : \"secondary\") + \"ArcColor\";\n    onChange({...query, [key]: color });\n  }\n\n  onArcColorComplementChanged = (label?: string) => {\n    const { onChange, query } = this.props;\n    onChange({...query, arcColorComplementLabel: label });\n  }\n\n  onAggregationMethodChanged = (aggrMethod: TimeseriesAggregationMethod[]) => {\n    const { onChange, query } = this.props;\n    const serialized: string|undefined = aggrMethod.length > 0 ? aggrMethod.map(m => m.valueOf()).join(\",\")  : undefined;\n    onChange({...query, aggrMethod: serialized });\n  }\n\n  onAggregationPeriodChanged = (aggrPeriod: AggregationPeriod) => {\n    const { onChange, query } = this.props;\n    onChange({...query, aggrPeriodDuration: aggrPeriod.serialize() });\n  }\n\n  onGeoChanged = (geo: {georel?: string, geometry?: string, coordinates?: string, geoproperty?: string}) => {\n    const { onChange, query } = this.props;\n    onChange({...query, georel: geo?.georel, geometry: geo?.geometry||\"Point\", coordinates: geo?.coordinates, geoproperty: geo?.geoproperty||\"location\" });\n  }\n\n  render() {\n    const query = defaults(this.props.query, defaultQuery);\n    const { entityId, entityType, entitiesIds, attributes, useLongEntityName, queryType, customQuery, variableMultitemp } = query;\n    const queryType0: NgsildQueryType = queryTypeForValue(queryType)!;\n    let graphEditor = <React.Fragment></React.Fragment>;\n    if (queryType === NgsildQueryType.NODE_GRAPH) {\n      const {primaryNodeAttributes, secondaryNodeAttributes, arcColorNodeAttributes, primaryArcColor, secondaryArcColor, arcColorComplementLabel } = query;\n      graphEditor = <GraphQueryEditor\n          primaryNodeAttributes={primaryNodeAttributes}\n          secondaryNodeAttributes={secondaryNodeAttributes}\n          arcColorNodeAttributes={arcColorNodeAttributes}\n          arcColorComplementLabel={arcColorComplementLabel}\n          primaryArcColor={primaryArcColor}\n          secondaryArcColor={secondaryArcColor}\n          proposedAttributes={this.getAttributes(entityType, entityId, queryType, true)}\n          attributesChanged={this.onGraphAttributesChanged}\n          onColorChanged={this.onGraphColorChanged}\n          onArcColorComplementChanged={this.onArcColorComplementChanged}\n        ></GraphQueryEditor>;\n    }\n    let temporalAggregationEditor  = <React.Fragment></React.Fragment>;\n    if (queryType === NgsildQueryType.TEMPORAL) {\n        const {aggrMethod, aggrPeriodDuration }  = query;\n        temporalAggregationEditor = <TsAggregationEditor\n          aggrMethod={aggrMethod}\n          aggrPeriodDuration={aggrPeriodDuration}\n          onAggregationMethodChanged={this.onAggregationMethodChanged}\n          onAggregationPeriodChanged={this.onAggregationPeriodChanged}\n          ></TsAggregationEditor>\n    }\n    const {georel, geometry, geoproperty, coordinates} = query;\n    const geoEditor = <GeoParamsEditor\n      georel={georel}\n      geometry={geometry}\n      geoproperty={geoproperty}\n      coordinates={coordinates}\n      onGeoChanged={this.onGeoChanged}\n    ></GeoParamsEditor>\n    return (\n      <div style={{display: \"flex\", columnGap: \"1.5em\", rowGap: \"1em\", flexWrap: \"wrap\"}}>\n        <div>\n          <h6>Basic settings and filters</h6>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineFormLabel width={12} tooltip=\"Query type\">\n                Query type\n              </InlineFormLabel>\n              <Select<NgsildQueryType>\n                options={QueryEditor.QUERY_TYPES}\n                value={queryType0}\n                onChange={this.onQueryTypeChange}\n                width={20}\n                ></Select>\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineFormLabel width={12} tooltip=\"Select the entity type\">\n                Entity type\n              </InlineFormLabel>\n              <Segment<string>\n                value={entityType || \"\"}\n                onChange={this.onEntityTypeChange}\n                options={this.getEntityTypes()}\n                inputMinWidth={12}\n                allowCustomValue\n              ></Segment>\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"Select the entity id\">\n                Entity id\n              </InlineFormLabel>              \n              <Segment<string>\n                value={entityId || \"\"}\n                onChange={  this.onEntityIdChange}\n                options={this.getEntityIds(entityType)}\n                inputMinWidth={12}\n                allowCustomValue\n              ></Segment>\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineFormLabel width={12} tooltip=\"Attributes to include\">\n                Attributes\n              </InlineFormLabel>\n              <MultiSelect<string>\n                options={this.getAttributes(entityType, entityId, queryType0)}\n                value={attributes}\n                onChange={this.onAttributeChange}\n                width={20}\n                ></MultiSelect>\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"A query string conforming to the NGSI-LD query language, such as speed>50;brandName!='Mercedes'\">\n                Custom query\n              </InlineFormLabel>\n              <Input\n                value={customQuery || \"\"}\n                onChange={evt => this.onCustomQueryChange(evt.currentTarget.value)}\n                type=\"string\"\n                placeholder={\"speed>50;brandName!=\\\"Mercedes\\\"\"}\n                width={20}\n              ></Input>\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <InlineFormLabel width={12} tooltip=\"Entities to include\">\n                Entities Multitemp\n              </InlineFormLabel>\n              <Select\n              options={this.getEntitiesIdsVariable()}\n              value={entitiesIds}\n              onChange={this.onEntytiesChange}\n              isMulti\n              isClearable\n              closeMenuOnSelect={false}\n              placeholder=\"Selecciona o escribe...\"\n            />\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n            <InlineFormLabel width={12} tooltip=\"The Grafana Variable to use when no entities multitemp are selected\">\n                Variable Multitemp\n              </InlineFormLabel>\n              <Input\n                value={variableMultitemp || \"\"}\n                onChange={evt => this.onVariableMultitempChange(evt.currentTarget.value)}\n                type=\"string\"\n                placeholder={\"$VariableName\"}\n                width={20}\n              ></Input>\n            </div>\n          </div>\n          <div className=\"gf-form-inline\">\n            <div className=\"gf-form\">\n              <Checkbox\n                value={useLongEntityName || false}\n                onChange={this.onLongEntityNameChange}\n                label=\"Long entity names\"\n                description=\"Show the fully qualified entity name?\"\n              />\n            </div>\n          </div>\n        </div>  \n        <div>\n          {geoEditor}\n        </div>  \n        <div>\n          {graphEditor}\n        </div>  \n        <div>\n          {temporalAggregationEditor}\n        </div>\n      </div>\n    );\n  }\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { NgsildDataSource } from './datasource';\nimport { ConfigEditor } from './ConfigEditor';\nimport { QueryEditor } from './QueryEditor';\nimport { NgsildQuery, NgsildSourceOptions } from './types';\n\nexport const plugin = new DataSourcePlugin<NgsildDataSource, NgsildQuery, NgsildSourceOptions>(NgsildDataSource)\n  .setConfigEditor(ConfigEditor)\n  .setQueryEditor(QueryEditor);\n"],"names":["module","exports","value","type","Symbol","getRawTag","objectToString","symToStringTag","toStringTag","undefined","Object","freeGlobal","freeSelf","self","root","Function","baseGetTag","isObject","tag","g","other","isFunction","isLength","length","reIsUint","test","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","freeProcess","process","nodeUtil","types","require","binding","e","baseRest","eq","isIterateeCall","keysIn","objectProto","prototype","hasOwnProperty","defaults","object","sources","index","guard","source","props","propsIndex","propsLength","key","call","identity","overRest","setToString","func","start","apply","nativeMax","Math","max","transform","args","arguments","array","Array","otherArgs","this","thisArg","baseSetToString","shortOut","constant","defineProperty","string","getNative","baseIsNative","getValue","isMasked","toSource","reIsHostCtor","funcProto","funcToString","toString","reIsNative","RegExp","replace","nativeObjectToString","isOwn","unmasked","result","uid","coreJsData","maskSrcKey","exec","keys","IE_PROTO","nativeNow","Date","now","count","lastCalled","stamp","remaining","isArrayLike","isIndex","arrayLikeKeys","baseKeysIn","baseTimes","isArguments","isArray","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","push","n","iteratee","baseIsArguments","isObjectLike","propertyIsEnumerable","baseIsTypedArray","baseUnary","nodeIsTypedArray","typedArrayTags","isPrototype","nativeKeysIn","isProto","Ctor","constructor","__WEBPACK_EXTERNAL_MODULE__45__","__WEBPACK_EXTERNAL_MODULE__46__","__WEBPACK_EXTERNAL_MODULE__47__","__WEBPACK_EXTERNAL_MODULE__48__","__WEBPACK_EXTERNAL_MODULE__50__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","getter","__esModule","d","a","definition","o","enumerable","get","globalThis","window","obj","prop","r","nmd","paths","children","NgsildQueryType","TimeseriesAggregationMethod","GeorelProperty","aggregationMethodForValue","method","toLowerCase","TOTAL_COUNT","DISTINCT_COUNT","SUM","AVERAGE","MIN","MAX","STANDARD_DEVIATION","SUM_SQUARE","georelFromValue","georel","NONE","startsWith","NEAR","EQUALS","DISJOINT","INTERSECTS","WITHIN","CONTAINS","OVERLAPS","defaultQuery","queryType","TEMPORAL","valueOf","JsUtils","_classCallCheck","p1","p2","end","endsWith","substring","url","keyValue","sep","indexOf","units","CEL","KEL","MTR","CMT","DMT","MMT","KTM","KMT","C81","DD","D61","D62","C47","B98","C26","SEC","HUR","DAY","ANN","MTS","KMH","M62","MSK","M46","MGM","GRM","KGM","TNE","KTN","PAL","KPA","HBA","MBR","BAR","KBA","ATM","JOU","KJO","GV","WHR","KWH","MWH","GWH","A53","B29","B71","A85","C31","WTT","KWT","MAW","A90","D46","KVA","MVA","AMP","B22","COU","AMH","TAH","VLT","KVT","D50","D33","C29","OHM","E45","B49","B75","MTK","MTQ","LTR","MLT","HTZ","NEW","C62","KGS","MQS","MQH","B11","B43","BQL","property","_typeof","getValueWithUnit","v","isFinite","unit","unitCode","INVALID_ATTRIBUTES","freeze","GeoHandler","entities","refId","allAttributes","map","flatMap","attributes","filter","attribute","fields","_toConsumableArray","Set","attr","name","values","longitude","latitude","names","forEach","entity","location","field","coordinates","col","lastIndexOf","f","unshift","MutableDataFrame","_regeneratorRuntime","t","i","iterator","c","asyncIterator","u","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","h","l","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_createForOfIteratorHelper","allowArrayLike","it","F","_e","err","normalCompletion","didErr","step","_e2","minLen","_arrayLikeToArray","from","len","arr2","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","_defineProperties","target","descriptor","_toPropertyKey","toPrimitive","Number","_toPrimitive","NodeGraphHandler","datasource","query","instance","Constructor","protoProps","staticProps","_getEntites","_resolveMissingEntities","_handleGraphResult","_callee","maxGraphDepth","entityLabel","nodeIdField","nodeTitleField","nodeSubTitleField","nodeMainStatField","nodeSecondaryStatField","nodeArcField1","nodeArcField2","nodeArcFieldNeutral","getStatValue","setFieldConfig","edgeIdField","edgeSourceField","edgeTargetField","edgeMainStatField","_iterator","_step","_loop","nodeFields","nodes","edges","_this","_context2","resolveMissingEntities","useLongEntityName","FieldType","config","number","color","mode","fixedColor","statAttributes","options","selectedAttr","find","returnAttribute","skipUnit","primaryNodeAttributes","secondaryNodeAttributes","arcColorNodeAttributes","arcColorComplementLabel","primaryArcColor","secondaryArcColor","_this$query","_this$query2","_this$query3","label","dot","subtitle","arcStatValue","complementArcState","neutralArcState","_context","entries","_ref","_ref2","entity2","_ref3","_ref4","relationship","t1","findIndex","meta","preferredVisualisationType","_x","_x2","_callee2","depthCnt","startIdx","missingEntities","idx","newEntities","newStartIdx","recursiveEntities","_args3","_context3","_ref5","_ref6","_ref7","_ref8","add","getEntites","_x3","_x4","_callee3","ids","entityId","response","additionalEntities","_context4","size","join","request","ENTITY","data","_x5","_callSuper","_getPrototypeOf","_assertThisInitialized","_possibleConstructorReturn","_isNativeReflectConstruct","Reflect","construct","Boolean","bind","ReferenceError","_setPrototypeOf","_defineProperty","NgsildDataSource","_DataSourceApi","instanceSettings","_instanceSettings$jso","_instanceSettings$url","_instanceSettings$jso2","baseUrl","concatPaths","actualTimeseriesUrl","jsonData","timeseriesUrl","access","contextUrl","contextLinkHeader","_testDatasource","_requestSimple","_request","_querySingle","_metricFindQuery","_query","subClass","superClass","_inherits","backend","range","data0","frames","_this2","getBackendSrv","targets","_range$from","_range$to","querySingle","to","all","posicion","queryArray","results","getStringValue","split","requestSimple","frame","text","extraInfo","replaceName","splice","_i","_attributes","attributeChanged","point","time","getTime","isNumber","observedAt","_query$attributes","entities_to_fetch","variableName","temp_results","temp_controlled","temp_extra_att","_iterator2","_step2","resControlled","depth","response2","res","content_range","fecha","numeroDeMilisegundos","res2","_iterator3","_step3","_response","entityType","MULTITEMPORAL","entitiesIds","variableMultitemp","getTemplateSrv","status","headers","t0","addDataToFrame","GEO","handleGeoResult","NODE_GRAPH","handleGraphResult","_callee4","_query$attributes3","endpoint","ngsildOptionsParam","hasComma","_query$attributes2","addAttributes","_query$attributes4","appendNumericParam","appendAll","fetchOptions","result0","VERSION","TYPES","ATTRIBUTES","aggrMethod","appendQueryParam","aggrPeriodDuration","trim","encodeURIComponent","_attributes2","setTimeInterval","geometry","geoproperty","customQuery","variableValue","params","_step4","_iterator4","responseType","Accept","Link","toPromise","fetch","_x6","_x7","_callee5","urlComposed","paramsString","paramsToKeep","newParams","urlmodified","_context5","param","_x8","_x9","_callee6","_context6","hasFrom","hasTo","timerel","timeAt","toISOString","observable","subscribe","ok","message","statusText","DataSourceApi","LegacyForms","SecretFormField","FormField","ConfigEditor","_PureComponent","_len","_key","concat","event","_event$currentTarget$","_this$props","onOptionsChange","_extends","currentTarget","_event$currentTarget$2","_this$props2","_event$currentTarget$3","_this$props3","_this$props4","active","_this$props5","authType","_this$props6","securejsonData","secureJsonData","clientId","_this$props7","clientSecret","_this$props8","tokenUrl","secureJsonFields","isAuthActive","authConfigured","React","className","labelWidth","inputWidth","onChange","onUrlChange","placeholder","onTimeseriesUrlChange","onContextUrlChange","_InlineFormLabel","InlineFormLabel","width","tooltip","Select","title","onAccessModeChange","Checkbox","checked","onAuthStatusChange","_InlineFormLabel2","Input","evt","_evt$currentTarget$va","onTokenServerChange","_InlineFormLabel3","_evt$currentTarget$va2","onClientIdChange","_InlineFormLabel4","_evt$currentTarget$va3","onClientSecretChange","PureComponent","GraphQueryEditor","kind","newValue","oldValue","_newValue","records","attributesChanged","proposedValues","Segment","QueryEditor","toOption","val","inputMinWidth","allowCustomValue","proposedAttributes","primaries","secondaries","arcColors","primaryElements","selector","secondaryElements","arcColorElements","primaryArcColor1","secondaryArcColor1","_h","onArcColorComplementChanged","_InlineFormLabel5","ColorPicker","onColorChanged","_InlineFormLabel6","AggregationPeriodBuilderImpl","_build","_createClass","_seconds","_validate","_minutes","_hours","_days","_months","_years","AggregationPeriod","_isTimePartEmpty","_isEmpty","str","attach","builder","m","mn","setSeconds","setMinutes","setHours","setDays","setMonths","setYears","toUpperCase","hasSeparator","yr","parseInt","months","days","hours","minutes","seconds","build","DistanceType","TsAggregationEditor","onAggregationMethodChanged","onAggregationPeriodChanged","aggrMethod1","period","deserialize","elements","MultiSelect","AGGREGATION_METHODS","methodsChanged","years","_val$currentTarget","_val$currentTarget$va","periodChanged","_val$currentTarget2","_val$currentTarget2$v","_val$currentTarget3","_val$currentTarget3$v","_val$currentTarget4","_val$currentTarget4$v","_val$currentTarget5","_val$currentTarget5$v","_InlineFormLabel7","_val$currentTarget6","_val$currentTarget6$v","_InlineFormLabel8","description","GeoParamsEditor","vals","buildGeorel","newType","onGeoChanged","MAX_DISTANCE","newDistanceType","newDistance","coords","georelType","georelFilter","GEOREL_OPTIONS","georelChanged","nearTypeFilters","_React$Fragment","isMinDistance","distance","parseFloat","_evt$currentTarget","distanceChanged","DISTANCE_OPTIONS","MIN_DISTANCE","distanceTypeChanged","geo","geometryChanged","GEOMETRY_OPTIONS","_evt$currentTarget2","_evt$currentTarget2$v","coordinatesChanged","geopropertyChanged","GEOPROPERTY_OPTIONS","oldGeorel","_oldGeorel$substring","lastEq","distType","firstSem","assign","_event$value","EMPTY_OPTION_ID","loadEntities","_e$value","_e$value2","_event$value2","_event$value3","loadAttributes","q","_this$props9","primaryOrSecondary","_this$props10","_this$props11","_this$props12","aggrPeriod","_this$props13","serialize","_this$props14","loadData","_loadAttributes","_loadEntities","prom1","_type$typeName","typeName","shortName","setState","prom2","attributeList","prom3","_","limit","_this$state","_this$state2","_this$state3","variableVal","entitiesVar","entitiesByVariable","entitiesByType","attributesById","attributesForEntity","newAttributesByIds","_this3","state","entityIdsByType","includes","attributesByEntityId","fromEntries","entitiesIdsVariable","_this$state4","_this$state5","attrs","attrsByEntity","_this$state6","sort","EMPTY_OPTION","_this$state7","_this$state8","_this$state9","maxLength","reduce","a2","cnt","outer","arrIdx","addEmpty","attribs","getAttributesInternal","_this$state12","_this$state14","_this$state10","_this$state10$attribu","_this$state11","_this$state13","_this$state13$types","attributeNames","_this4","queryType0","queryTypeForValue","graphEditor","getAttributes","onGraphAttributesChanged","onGraphColorChanged","temporalAggregationEditor","_React$Fragment2","geoEditor","style","display","columnGap","rowGap","flexWrap","QUERY_TYPES","onQueryTypeChange","onEntityTypeChange","getEntityTypes","onEntityIdChange","getEntityIds","onAttributeChange","onCustomQueryChange","getEntitiesIdsVariable","onEntytiesChange","isMulti","isClearable","closeMenuOnSelect","onVariableMultitempChange","onLongEntityNameChange","_QueryEditor","plugin","DataSourcePlugin","setConfigEditor","setQueryEditor"],"sourceRoot":""}